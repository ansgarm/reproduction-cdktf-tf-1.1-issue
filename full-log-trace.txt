âžœ  reproduction-cdktf-tf-1.1-issue git:(main) ./reproduce.sh                                                                                                                                                                                                           14:51:37
2021-12-17T14:51:41.440+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:41.441+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:41.441+0100 [INFO]  CLI args: []string{"terraform", "init"}
2021-12-17T14:51:41.441+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:41.441+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:41.441+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:41.441+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:41.441+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:41.441+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:41.444+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:41.444+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:41.444+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:41.445+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:41.445+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:41.446+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:41.446+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:41.446+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:41.447+0100 [INFO]  CLI command args: []string{"init"}

Initializing the backend...
2021-12-17T14:51:41.454+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-12-17T14:51:41.455+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-12-17T14:51:41.455+0100 [DEBUG] New state was assigned lineage "7b1b1f7b-0137-17b0-19a0-efdd491e56ee"
2021-12-17T14:51:41.455+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-12-17T14:51:41.455+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-12-17T14:51:41.457+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:41.458+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:41.458+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:41.514+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:41.514+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:41.514+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:41.514+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-12-17T14:51:41.515+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021-12-17T14:51:41.515+0100 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021-12-17T14:51:41.515+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:41.515+0100 [TRACE] statemgr.Filesystem: read nil snapshot

Initializing provider plugins...
- Reusing previous version of kreuzwerker/docker from the dependency lock file
2021-12-17T14:51:41.518+0100 [DEBUG] Service discovery for registry.terraform.io at https://registry.terraform.io/.well-known/terraform.json
2021-12-17T14:51:41.519+0100 [TRACE] HTTP client GET request to https://registry.terraform.io/.well-known/terraform.json
2021-12-17T14:51:41.845+0100 [DEBUG] GET https://registry.terraform.io/v1/providers/kreuzwerker/docker/versions
2021-12-17T14:51:41.845+0100 [TRACE] HTTP client GET request to https://registry.terraform.io/v1/providers/kreuzwerker/docker/versions
2021-12-17T14:51:42.004+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:42.005+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:42.005+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
- Using previously-installed kreuzwerker/docker v2.15.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
2021-12-17T14:51:42.108+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:42.108+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:42.108+0100 [INFO]  CLI args: []string{"terraform", "plan", "-out", "test.plan", "-state", "test.tfstate"}
2021-12-17T14:51:42.108+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:42.108+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:42.108+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:42.108+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:42.108+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:42.108+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:42.108+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:42.108+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:42.108+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:42.109+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:42.109+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:42.109+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:42.109+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:42.109+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:42.109+0100 [INFO]  CLI command args: []string{"plan", "-out", "test.plan", "-state", "test.tfstate"}
2021-12-17T14:51:42.110+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-12-17T14:51:42.110+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-12-17T14:51:42.110+0100 [DEBUG] New state was assigned lineage "013ae6ca-9dc1-eba9-0994-22f82760a482"
2021-12-17T14:51:42.110+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-12-17T14:51:42.110+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-12-17T14:51:42.117+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:42.117+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:42.117+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:42.174+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:42.174+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:42.174+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:42.174+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-12-17T14:51:42.174+0100 [TRACE] backend/local: CLI option -state is overriding state path to test.tfstate
2021-12-17T14:51:42.178+0100 [INFO]  backend/local: starting Plan operation
2021-12-17T14:51:42.178+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-12-17T14:51:42.179+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from test.tfstate
 - write new snapshots to test.tfstate
 - create any backup at test.tfstate.backup
2021-12-17T14:51:42.179+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-12-17T14:51:42.181+0100 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at test.tfstate
2021-12-17T14:51:42.181+0100 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2021-12-17T14:51:42.181+0100 [TRACE] statemgr.Filesystem: locking test.tfstate using fcntl flock
2021-12-17T14:51:42.181+0100 [TRACE] statemgr.Filesystem: writing lock metadata to .test.tfstate.lock.info
2021-12-17T14:51:42.182+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-12-17T14:51:42.182+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from test.tfstate
2021-12-17T14:51:42.182+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:42.182+0100 [TRACE] statemgr.Filesystem: read nil snapshot
2021-12-17T14:51:42.182+0100 [TRACE] backend/local: populating backend.LocalRun for current working directory
2021-12-17T14:51:42.183+0100 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/kreuzwerker/docker has 2.15.0 to satisfy "~> 2.12"
2021-12-17T14:51:42.184+0100 [TRACE] terraform.NewContext: starting
2021-12-17T14:51:42.184+0100 [TRACE] terraform.NewContext: complete
2021-12-17T14:51:42.184+0100 [TRACE] backend/local: requesting interactive input, if necessary
2021-12-17T14:51:42.184+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"
2021-12-17T14:51:42.184+0100 [TRACE] terraform.contextPlugins: Initializing provider "registry.terraform.io/kreuzwerker/docker" to read its schema
2021-12-17T14:51:42.185+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:42.186+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:42.198+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:42.201+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77870
2021-12-17T14:51:42.202+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:42.566+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:42.566+0100
2021-12-17T14:51:42.604+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:42.604+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin756953485 network=unix timestamp=2021-12-17T14:51:42.604+0100
2021-12-17T14:51:42.639+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:42.639+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:42.648+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:42.648+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:42.650+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77870
2021-12-17T14:51:42.650+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:42.650+0100 [TRACE] Context.Input: Prompting for provider arguments
2021-12-17T14:51:42.650+0100 [TRACE] Context.Input: Provider provider.docker declared at main.tf.json:18,15-16
2021-12-17T14:51:42.651+0100 [TRACE] Context.Input: Input for provider.docker: map[string]cty.Value{}
2021-12-17T14:51:42.651+0100 [TRACE] backend/local: running validation operation
2021-12-17T14:51:42.651+0100 [DEBUG] Building and walking validate graph
2021-12-17T14:51:42.651+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-12-17T14:51:42.651+0100 [TRACE] ConfigTransformer: Starting for path:
2021-12-17T14:51:42.652+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
  ------
2021-12-17T14:51:42.652+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-12-17T14:51:42.653+0100 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-12-17T14:51:42.653+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer" (*terraform.NodeValidatableResource) config from main.tf.json:36,25-26
2021-12-17T14:51:42.653+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer
2021-12-17T14:51:42.653+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage" (*terraform.NodeValidatableResource) config from main.tf.json:24,21-22
2021-12-17T14:51:42.653+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage
2021-12-17T14:51:42.653+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-12-17T14:51:42.653+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider configuration from main.tf.json:18,15-16
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-12-17T14:51:42.653+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer
2021-12-17T14:51:42.653+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.653+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage
2021-12-17T14:51:42.653+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-12-17T14:51:42.653+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-12-17T14:51:42.654+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.654+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-12-17T14:51:42.654+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-12-17T14:51:42.654+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-12-17T14:51:42.654+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer
2021-12-17T14:51:42.654+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage
2021-12-17T14:51:42.654+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.654+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-12-17T14:51:42.654+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-12-17T14:51:42.654+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-12-17T14:51:42.654+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:42.656+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer" references: [docker_image.nginxImage]
2021-12-17T14:51:42.656+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage" references: []
2021-12-17T14:51:42.656+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/kreuzwerker/docker\"]" references: []
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:42.656+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-12-17T14:51:42.656+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:42.656+0100 [DEBUG] Starting graph walk: walkValidate
2021-12-17T14:51:42.657+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": starting visit (*terraform.NodeApplyableProvider)
2021-12-17T14:51:42.658+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:42.658+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:42.667+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:42.670+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77871
2021-12-17T14:51:42.670+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:42.688+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:42.687+0100
2021-12-17T14:51:42.721+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:42.721+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin824772506 network=unix timestamp=2021-12-17T14:51:42.721+0100
2021-12-17T14:51:42.747+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:42.747+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.748+0100 [TRACE] NodeApplyableProvider: validating configuration for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.748+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/kreuzwerker/docker"]: using explicit config only
2021-12-17T14:51:42.748+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": visit complete
2021-12-17T14:51:42.748+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodeValidatableResource)
2021-12-17T14:51:42.750+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:42.750+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:42.754+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:42.754+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodeValidatableResource)
2021-12-17T14:51:42.755+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:42.757+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:42.757+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-12-17T14:51:42.757+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:42.758+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:42.760+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77871
2021-12-17T14:51:42.760+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:42.760+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": visit complete
2021-12-17T14:51:42.760+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-12-17T14:51:42.760+0100 [TRACE] vertex "root": visit complete
2021-12-17T14:51:42.760+0100 [INFO]  backend/local: plan calling Plan
2021-12-17T14:51:42.761+0100 [DEBUG] Building and walking plan graph for NormalMode
2021-12-17T14:51:42.761+0100 [TRACE] refactoring.ApplyMoves: No 'moved' statements to consider in this configuration
2021-12-17T14:51:42.761+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-12-17T14:51:42.761+0100 [TRACE] ConfigTransformer: Starting for path:
2021-12-17T14:51:42.761+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  ------
2021-12-17T14:51:42.761+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-12-17T14:51:42.761+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021-12-17T14:51:42.761+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-12-17T14:51:42.761+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-12-17T14:51:42.761+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-12-17T14:51:42.761+0100 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021-12-17T14:51:42.761+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-12-17T14:51:42.761+0100 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-12-17T14:51:42.762+0100 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-12-17T14:51:42.762+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf.json:24,21-22
2021-12-17T14:51:42.762+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage (expand)
2021-12-17T14:51:42.762+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf.json:36,25-26
2021-12-17T14:51:42.762+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer (expand)
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-12-17T14:51:42.762+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider configuration from main.tf.json:18,15-16
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-12-17T14:51:42.762+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage (expand)
2021-12-17T14:51:42.762+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.762+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer (expand)
2021-12-17T14:51:42.762+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-12-17T14:51:42.762+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-12-17T14:51:42.762+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.762+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage (expand)
2021-12-17T14:51:42.762+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer (expand)
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-12-17T14:51:42.762+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-12-17T14:51:42.762+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:42.763+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer (expand)" references: [docker_image.nginxImage (expand)]
2021-12-17T14:51:42.763+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/kreuzwerker/docker\"]" references: []
2021-12-17T14:51:42.763+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage (expand)" references: []
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-12-17T14:51:42.763+0100 [TRACE] AttachDependenciesTransformer: docker_image.nginxImage depends on []
2021-12-17T14:51:42.763+0100 [TRACE] AttachDependenciesTransformer: docker_container.nginxContainer depends on [docker_image.nginxImage]
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-12-17T14:51:42.763+0100 [TRACE] ForcedCBDTransformer: "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-12-17T14:51:42.763+0100 [TRACE] ForcedCBDTransformer: "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:42.763+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-12-17T14:51:42.763+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:42.763+0100 [DEBUG] Starting graph walk: walkPlan
2021-12-17T14:51:42.763+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": starting visit (*terraform.NodeApplyableProvider)
2021-12-17T14:51:42.763+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:42.764+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:42.772+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:42.775+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77872
2021-12-17T14:51:42.775+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:42.794+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:42.793+0100
2021-12-17T14:51:42.828+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:42.828+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: network=unix address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin690851183 timestamp=2021-12-17T14:51:42.828+0100
2021-12-17T14:51:42.853+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.853+0100 [TRACE] NodeApplyableProvider: configuring provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:42.853+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:42.854+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/kreuzwerker/docker"]: using explicit config only
2021-12-17T14:51:42.854+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:42.857+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-12-17T14:51:42.860+0100 [WARN]  ValidateProviderConfig from "provider[\"registry.terraform.io/kreuzwerker/docker\"]" changed the config value, but that value is unused
2021-12-17T14:51:42.860+0100 [TRACE] GRPCProvider: ConfigureProvider
2021-12-17T14:51:42.864+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": visit complete
2021-12-17T14:51:42.864+0100 [TRACE] vertex "docker_image.nginxImage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-12-17T14:51:42.864+0100 [TRACE] vertex "docker_image.nginxImage (expand)": expanding dynamic subgraph
2021-12-17T14:51:42.864+0100 [TRACE] vertex "docker_image.nginxImage (expand)": entering dynamic subgraph
2021-12-17T14:51:42.864+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodePlannableResource)
2021-12-17T14:51:42.865+0100 [TRACE] vertex "docker_image.nginxImage": expanding dynamic subgraph
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-12-17T14:51:42.865+0100 [TRACE] ResourceCountTransformer: adding docker_image.nginxImage as *terraform.NodePlannableResourceInstance
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  docker_image.nginxImage - *terraform.NodePlannableResourceInstance
  ------
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:42.865+0100 [DEBUG] Resource instance state not found for node "docker_image.nginxImage", instance docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:42.865+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage" references: []
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-12-17T14:51:42.865+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-12-17T14:51:42.865+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-12-17T14:51:42.865+0100 [TRACE] vertex "docker_image.nginxImage": entering dynamic subgraph
2021-12-17T14:51:42.865+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodePlannableResourceInstance)
2021-12-17T14:51:42.865+0100 [TRACE] readResourceInstanceState: reading state for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] readResourceInstanceState: no state present for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResourceInstance.refresh for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [DEBUG] refresh: docker_image.nginxImage: no state, so not refreshing
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_image.nginxImage
2021-12-17T14:51:42.865+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_image.nginxImage
2021-12-17T14:51:42.866+0100 [TRACE] Re-validating config for "docker_image.nginxImage"
2021-12-17T14:51:42.867+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:42.867+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_image.nginxImage
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:42.869+0100 [TRACE] writeChange: recorded Create change for docker_image.nginxImage
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_image.nginxImage": dynamic subgraph completed successfully
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_image.nginxImage (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_image.nginxImage (expand)": visit complete
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": expanding dynamic subgraph
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": entering dynamic subgraph
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodePlannableResource)
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer": expanding dynamic subgraph
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-12-17T14:51:42.869+0100 [TRACE] ResourceCountTransformer: adding docker_container.nginxContainer as *terraform.NodePlannableResourceInstance
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodePlannableResourceInstance
  ------
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:42.869+0100 [DEBUG] Resource instance state not found for node "docker_container.nginxContainer", instance docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:42.869+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer" references: []
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-12-17T14:51:42.869+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-12-17T14:51:42.869+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer": entering dynamic subgraph
2021-12-17T14:51:42.869+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodePlannableResourceInstance)
2021-12-17T14:51:42.869+0100 [TRACE] readResourceInstanceState: reading state for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] readResourceInstanceState: no state present for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResourceInstance.refresh for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [DEBUG] refresh: docker_container.nginxContainer: no state, so not refreshing
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_container.nginxContainer
2021-12-17T14:51:42.869+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: removing state object for docker_container.nginxContainer
2021-12-17T14:51:42.870+0100 [TRACE] Re-validating config for "docker_container.nginxContainer"
2021-12-17T14:51:42.870+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:42.871+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:42.872+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:42 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:42.872+0100
2021-12-17T14:51:42.872+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:42 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:42.872+0100
2021-12-17T14:51:42.872+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:42 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:42.872+0100
2021-12-17T14:51:42.872+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:42 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:42.872+0100
2021-12-17T14:51:42.872+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:42 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:42.872+0100
2021-12-17T14:51:42.874+0100 [WARN]  Provider "registry.terraform.io/kreuzwerker/docker" produced an invalid plan for docker_container.nginxContainer, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .rm: planned value cty.False for a non-computed attribute
      - .stdin_open: planned value cty.False for a non-computed attribute
      - .log_driver: planned value cty.StringVal("json-file") for a non-computed attribute
      - .logs: planned value cty.False for a non-computed attribute
      - .restart: planned value cty.StringVal("no") for a non-computed attribute
      - .tty: planned value cty.False for a non-computed attribute
      - .must_run: planned value cty.True for a non-computed attribute
      - .read_only: planned value cty.False for a non-computed attribute
      - .remove_volumes: planned value cty.True for a non-computed attribute
      - .start: planned value cty.True for a non-computed attribute
      - .attach: planned value cty.False for a non-computed attribute
      - .labels: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .healthcheck: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ports[0].ip: planned value cty.StringVal("0.0.0.0") for a non-computed attribute
      - .ports[0].protocol: planned value cty.StringVal("tcp") for a non-computed attribute
2021-12-17T14:51:42.874+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_container.nginxContainer
2021-12-17T14:51:42.874+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:42.874+0100 [TRACE] writeChange: recorded Create change for docker_container.nginxContainer
2021-12-17T14:51:42.874+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:42.874+0100 [TRACE] vertex "docker_container.nginxContainer": dynamic subgraph completed successfully
2021-12-17T14:51:42.874+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:42.874+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:42.874+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": visit complete
2021-12-17T14:51:42.874+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-12-17T14:51:42.874+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:42.875+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:42.877+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77872
2021-12-17T14:51:42.877+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:42.877+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": visit complete
2021-12-17T14:51:42.877+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-12-17T14:51:42.877+0100 [TRACE] vertex "root": visit complete
2021-12-17T14:51:42.877+0100 [INFO]  backend/local: plan operation completed
2021-12-17T14:51:42.877+0100 [INFO]  backend/local: writing plan output to: test.plan
2021-12-17T14:51:42.881+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_container.nginxContainer will be created
  + resource "docker_container" "nginxContainer" {
      + attach           = false
      + bridge           = (known after apply)
      + command          = (known after apply)
      + container_logs   = (known after apply)
      + entrypoint       = (known after apply)
      + env              = (known after apply)
      + exit_code        = (known after apply)
      + gateway          = (known after apply)
      + hostname         = (known after apply)
      + id               = (known after apply)
      + image            = (known after apply)
      + init             = (known after apply)
      + ip_address       = (known after apply)
      + ip_prefix_length = (known after apply)
      + ipc_mode         = (known after apply)
      + log_driver       = "json-file"
      + logs             = false
      + must_run         = true
      + name             = "tutorial"
      + network_data     = (known after apply)
      + read_only        = false
      + remove_volumes   = true
      + restart          = "no"
      + rm               = false
      + security_opts    = (known after apply)
      + shm_size         = (known after apply)
      + start            = true
      + stdin_open       = false
      + tty              = false

      + healthcheck {
          + interval     = (known after apply)
          + retries      = (known after apply)
          + start_period = (known after apply)
          + test         = (known after apply)
          + timeout      = (known after apply)
        }

      + labels {
          + label = (known after apply)
          + value = (known after apply)
        }

      + ports {
          + external = 8000
          + internal = 80
          + ip       = "0.0.0.0"
          + protocol = "tcp"
        }
    }

  # docker_image.nginxImage will be created
  + resource "docker_image" "nginxImage" {
      + id           = (known after apply)
      + keep_locally = false
      + latest       = (known after apply)
      + name         = "nginx:latest"
      + output       = (known after apply)
      + repo_digest  = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Saved the plan to: test.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "test.plan"
2021-12-17T14:51:42.885+0100 [TRACE] statemgr.Filesystem: removing lock metadata file .test.tfstate.lock.info
2021-12-17T14:51:42.886+0100 [TRACE] statemgr.Filesystem: unlocking test.tfstate using fcntl flock
2021-12-17T14:51:42.920+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:42.920+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:42.920+0100 [INFO]  CLI args: []string{"terraform", "show", "test.plan"}
2021-12-17T14:51:42.920+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:42.920+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:42.920+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:42.920+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:42.920+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:42.921+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:42.921+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:42.921+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:42.921+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:42.921+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:42.921+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:42.922+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:42.922+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:42.922+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:42.922+0100 [INFO]  CLI command args: []string{"show", "test.plan"}
2021-12-17T14:51:42.924+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-12-17T14:51:42.924+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-12-17T14:51:42.924+0100 [DEBUG] New state was assigned lineage "d419a0f3-fa93-32ae-a7c9-cfd83e2dd4f2"
2021-12-17T14:51:42.924+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-12-17T14:51:42.924+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-12-17T14:51:42.924+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:42.925+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:42.925+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:42.983+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:42.984+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:42.984+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:42.984+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-12-17T14:51:42.985+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-12-17T14:51:42.985+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021-12-17T14:51:42.985+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-12-17T14:51:42.985+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-12-17T14:51:42.985+0100 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021-12-17T14:51:42.985+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:42.985+0100 [TRACE] statemgr.Filesystem: read nil snapshot
2021-12-17T14:51:42.985+0100 [TRACE] backend/local: populating backend.LocalRun from plan file
2021-12-17T14:51:42.985+0100 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/kreuzwerker/docker has 2.15.0 to satisfy "~> 2.12"
2021-12-17T14:51:42.986+0100 [TRACE] terraform.NewContext: starting
2021-12-17T14:51:42.986+0100 [TRACE] terraform.NewContext: complete
2021-12-17T14:51:42.986+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"
2021-12-17T14:51:42.986+0100 [TRACE] terraform.contextPlugins: Initializing provider "registry.terraform.io/kreuzwerker/docker" to read its schema
2021-12-17T14:51:42.986+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:42.986+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:42.994+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:42.997+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77874
2021-12-17T14:51:42.997+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:43.014+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:43.014+0100
2021-12-17T14:51:43.047+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: network=unix address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin721990353 timestamp=2021-12-17T14:51:43.047+0100
2021-12-17T14:51:43.047+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:43.074+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:43.074+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:43.079+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:43.080+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:43.082+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77874
2021-12-17T14:51:43.082+0100 [DEBUG] provider: plugin exited

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # docker_container.nginxContainer will be created
  + resource "docker_container" "nginxContainer" {
      + attach           = false
      + bridge           = (known after apply)
      + command          = (known after apply)
      + container_logs   = (known after apply)
      + entrypoint       = (known after apply)
      + env              = (known after apply)
      + exit_code        = (known after apply)
      + gateway          = (known after apply)
      + hostname         = (known after apply)
      + id               = (known after apply)
      + image            = (known after apply)
      + init             = (known after apply)
      + ip_address       = (known after apply)
      + ip_prefix_length = (known after apply)
      + ipc_mode         = (known after apply)
      + log_driver       = "json-file"
      + logs             = false
      + must_run         = true
      + name             = "tutorial"
      + network_data     = (known after apply)
      + read_only        = false
      + remove_volumes   = true
      + restart          = "no"
      + rm               = false
      + security_opts    = (known after apply)
      + shm_size         = (known after apply)
      + start            = true
      + stdin_open       = false
      + tty              = false

      + healthcheck {
          + interval     = (known after apply)
          + retries      = (known after apply)
          + start_period = (known after apply)
          + test         = (known after apply)
          + timeout      = (known after apply)
        }

      + labels {
          + label = (known after apply)
          + value = (known after apply)
        }

      + ports {
          + external = 8000
          + internal = 80
          + ip       = "0.0.0.0"
          + protocol = "tcp"
        }
    }

  # docker_image.nginxImage will be created
  + resource "docker_image" "nginxImage" {
      + id           = (known after apply)
      + keep_locally = false
      + latest       = (known after apply)
      + name         = "nginx:latest"
      + output       = (known after apply)
      + repo_digest  = (known after apply)
    }

Plan: 2 to add, 0 to change, 0 to destroy.
2021-12-17T14:51:43.121+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:43.121+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:43.121+0100 [INFO]  CLI args: []string{"terraform", "apply", "-state", "test.tfstate", "test.plan"}
2021-12-17T14:51:43.121+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:43.121+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:43.121+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:43.121+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:43.121+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:43.121+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:43.122+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:43.122+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:43.122+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:43.122+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:43.122+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:43.122+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:43.122+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:43.122+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:43.123+0100 [INFO]  CLI command args: []string{"apply", "-state", "test.tfstate", "test.plan"}
2021-12-17T14:51:43.124+0100 [TRACE] Meta.BackendForPlan: instantiated backend of type *local.Local
2021-12-17T14:51:43.125+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:43.125+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:43.125+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:43.181+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:43.181+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:43.181+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:43.181+0100 [TRACE] backend/local: CLI option -state is overriding state path to test.tfstate
2021-12-17T14:51:43.181+0100 [TRACE] Meta.BackendForPlan: backend *local.Local supports operations
2021-12-17T14:51:43.182+0100 [INFO]  backend/local: starting Apply operation
2021-12-17T14:51:43.182+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-12-17T14:51:43.182+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from test.tfstate
 - write new snapshots to test.tfstate
 - create any backup at test.tfstate.backup
2021-12-17T14:51:43.182+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-12-17T14:51:43.182+0100 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at test.tfstate
2021-12-17T14:51:43.182+0100 [TRACE] statemgr.Filesystem: no previously-stored snapshot exists
2021-12-17T14:51:43.182+0100 [TRACE] statemgr.Filesystem: locking test.tfstate using fcntl flock
2021-12-17T14:51:43.182+0100 [TRACE] statemgr.Filesystem: writing lock metadata to .test.tfstate.lock.info
2021-12-17T14:51:43.183+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-12-17T14:51:43.183+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from test.tfstate
2021-12-17T14:51:43.183+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:43.183+0100 [TRACE] statemgr.Filesystem: read nil snapshot
2021-12-17T14:51:43.183+0100 [TRACE] backend/local: populating backend.LocalRun from plan file
2021-12-17T14:51:43.185+0100 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/kreuzwerker/docker has 2.15.0 to satisfy "~> 2.12"
2021-12-17T14:51:43.186+0100 [TRACE] terraform.NewContext: starting
2021-12-17T14:51:43.186+0100 [TRACE] terraform.NewContext: complete
2021-12-17T14:51:43.186+0100 [INFO]  backend/local: apply calling Apply
2021-12-17T14:51:43.186+0100 [DEBUG] Building and walking apply graph for NormalMode plan
2021-12-17T14:51:43.186+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-12-17T14:51:43.187+0100 [TRACE] ConfigTransformer: Starting for path:
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  ------
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.DiffTransformer
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer starting
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer: found Create change for docker_image.nginxImage
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer: docker_image.nginxImage will be represented by docker_image.nginxImage
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer: found Create change for docker_container.nginxContainer
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer: docker_container.nginxContainer will be represented by docker_container.nginxContainer
2021-12-17T14:51:43.187+0100 [TRACE] DiffTransformer complete
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  ------
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:43.187+0100 [DEBUG] Resource state not found for node "docker_image.nginxImage", instance docker_image.nginxImage
2021-12-17T14:51:43.187+0100 [DEBUG] Resource state not found for node "docker_container.nginxContainer", instance docker_container.nginxContainer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-12-17T14:51:43.187+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf.json:24,21-22
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage (expand)
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer (expand)" (*terraform.nodeExpandApplyableResource) config from main.tf.json:36,25-26
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer (expand)
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage" (*terraform.NodeApplyableResourceInstance) config from main.tf.json:24,21-22
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer" (*terraform.NodeApplyableResourceInstance) config from main.tf.json:36,25-26
2021-12-17T14:51:43.187+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer
2021-12-17T14:51:43.187+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-12-17T14:51:43.188+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-12-17T14:51:43.188+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-12-17T14:51:43.188+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider configuration from main.tf.json:18,15-16
2021-12-17T14:51:43.188+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:43.188+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-12-17T14:51:43.188+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021-12-17T14:51:43.188+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-12-17T14:51:43.189+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer (expand)
2021-12-17T14:51:43.189+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.189+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage
2021-12-17T14:51:43.189+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.189+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer
2021-12-17T14:51:43.189+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer" (*terraform.NodeApplyableResourceInstance) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.189+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage (expand)
2021-12-17T14:51:43.189+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage (expand)" (*terraform.nodeExpandApplyableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.189+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:43.192+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-12-17T14:51:43.192+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-12-17T14:51:43.192+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:43.192+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-12-17T14:51:43.192+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-12-17T14:51:43.192+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-12-17T14:51:43.192+0100 [TRACE] terraform.contextPlugins: Initializing provider "registry.terraform.io/kreuzwerker/docker" to read its schema
2021-12-17T14:51:43.193+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:43.193+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:43.204+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:43.206+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77876
2021-12-17T14:51:43.206+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:43.225+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:43.224+0100
2021-12-17T14:51:43.258+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:43.258+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: network=unix address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin755660139 timestamp=2021-12-17T14:51:43.258+0100
2021-12-17T14:51:43.283+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:43.283+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:43.289+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:43.290+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:43.291+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77876
2021-12-17T14:51:43.291+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:43.291+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage
2021-12-17T14:51:43.291+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer
2021-12-17T14:51:43.291+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.291+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage (expand)
2021-12-17T14:51:43.291+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer (expand)
2021-12-17T14:51:43.291+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-12-17T14:51:43.292+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-12-17T14:51:43.292+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-12-17T14:51:43.292+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:43.292+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage (expand)" references: []
2021-12-17T14:51:43.292+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer (expand)" references: []
2021-12-17T14:51:43.292+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage" references: []
2021-12-17T14:51:43.292+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer" references: [docker_image.nginxImage (expand) docker_image.nginxImage docker_image.nginxImage]
2021-12-17T14:51:43.292+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/kreuzwerker/docker\"]" references: []
2021-12-17T14:51:43.292+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:43.292+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-12-17T14:51:43.292+0100 [TRACE] AttachDependenciesTransformer: docker_image.nginxImage depends on []
2021-12-17T14:51:43.292+0100 [TRACE] AttachDependenciesTransformer: docker_container.nginxContainer depends on [docker_image.nginxImage]
2021-12-17T14:51:43.292+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-12-17T14:51:43.292+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-12-17T14:51:43.292+0100 [TRACE] ForcedCBDTransformer: "docker_container.nginxContainer" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021-12-17T14:51:43.292+0100 [TRACE] ForcedCBDTransformer: "docker_image.nginxImage" (*terraform.NodeApplyableResourceInstance) has no CBD descendent, so skipping
2021-12-17T14:51:43.292+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-12-17T14:51:43.292+0100 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.pruneUnusedNodesTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.pruneUnusedNodesTransformer (no changes)
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:43.293+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-12-17T14:51:43.293+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
    docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
  docker_container.nginxContainer (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeApplyableResourceInstance
    docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandApplyableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeApplyableResourceInstance
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:43.293+0100 [DEBUG] Starting graph walk: walkApply
2021-12-17T14:51:43.294+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": starting visit (*terraform.NodeApplyableProvider)
2021-12-17T14:51:43.294+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:43.294+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:43.302+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:43.305+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77877
2021-12-17T14:51:43.305+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:43.323+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:43.323+0100
2021-12-17T14:51:43.356+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:43.356+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin639507872 network=unix timestamp=2021-12-17T14:51:43.356+0100
2021-12-17T14:51:43.381+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.381+0100 [TRACE] NodeApplyableProvider: configuring provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:43.381+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:43.381+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/kreuzwerker/docker"]: using explicit config only
2021-12-17T14:51:43.382+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:43.384+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-12-17T14:51:43.387+0100 [WARN]  ValidateProviderConfig from "provider[\"registry.terraform.io/kreuzwerker/docker\"]" changed the config value, but that value is unused
2021-12-17T14:51:43.387+0100 [TRACE] GRPCProvider: ConfigureProvider
2021-12-17T14:51:43.390+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": visit complete
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": starting visit (*terraform.nodeExpandApplyableResource)
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage (expand)": expanding dynamic subgraph
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": expanding dynamic subgraph
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage (expand)": entering dynamic subgraph
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": entering dynamic subgraph
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodeApplyableResource)
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodeApplyableResource)
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage (expand)": visit complete
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodeApplyableResourceInstance)
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:43.390+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": visit complete
2021-12-17T14:51:43.391+0100 [TRACE] readDiff: Read Create change from plan for docker_image.nginxImage
2021-12-17T14:51:43.391+0100 [TRACE] readResourceInstanceState: reading state for docker_image.nginxImage
2021-12-17T14:51:43.391+0100 [TRACE] readResourceInstanceState: no state present for docker_image.nginxImage
2021-12-17T14:51:43.391+0100 [TRACE] readDiff: Read Create change from plan for docker_image.nginxImage
2021-12-17T14:51:43.391+0100 [TRACE] Re-validating config for "docker_image.nginxImage"
2021-12-17T14:51:43.391+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:43.392+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:43.394+0100 [TRACE] checkPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021-12-17T14:51:43.395+0100 [TRACE] readResourceInstanceState: reading state for docker_image.nginxImage
2021-12-17T14:51:43.395+0100 [TRACE] readResourceInstanceState: no state present for docker_image.nginxImage
docker_image.nginxImage: Creating...
2021-12-17T14:51:43.395+0100 [INFO]  Starting apply for docker_image.nginxImage
2021-12-17T14:51:43.395+0100 [DEBUG] docker_image.nginxImage: applying the planned Create change
2021-12-17T14:51:43.395+0100 [TRACE] GRPCProvider: ApplyResourceChange
2021-12-17T14:51:43.403+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Docker image inspect from readFunc: {
	"Id": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"RepoTags": [
		"nginx:latest"
	],
	"RepoDigests": [
		"nginx@sha256:353c20f74d9b6aee359f30e8e4f69c3d7eaea2f610681c4a95849a2fd7c497f9"
	],
	"Parent": "",
	"Comment": "",
	"Created": "2021-07-06T19:39:40.385800548Z",
	"Container": "c0f61378a01130e56a6072f9409a77921c5089cb2552be7ceab5e44678d46c2b",
	"ContainerConfig": {
		"Hostname": "c0f61378a011",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"/bin/sh",
			"-c",
			"#(nop) ",
			"CMD [\"nginx\" \"-g\" \"daemon off;\"]"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"DockerVersion": "20.10.7",
	"Author": "",
	"Config": {
		"Hostname": "",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"Architecture": "amd64",
	"Os": "linux",
	"Size": 133175461,
	"VirtualSize": 133175461,
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/merged",
			"UpperDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff",
			"WorkDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/work"
		},
		"Name": "overlay2"
	},
	"RootFS": {
		"Type": "layers",
		"Layers": [
			"sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
			"sha256:ace9ed9bcfafbc909bc3e9451490652f685959db02a4e01e0528a868ee8eab3e",
			"sha256:48b4a40de3597ec0a28c2d4508dec64ae685ed0da77b128d0fb5c69cada91882",
			"sha256:c553c6ba5f1354e1980871b413e057950e0c02d2d7a66b39de2e03836048fda9",
			"sha256:d97733c0a3b64c08bc0dd286926a8eff1b162b4d9fad229eab807c6dc516c172",
			"sha256:9d1af766c81806211d5453b711169103e4f5c3c2609e1dfb9ea4dee7e96a7968"
		]
	},
	"Metadata": {
		"LastTagTime": "0001-01-01T00:00:00Z"
	}
}: timestamp=2021-12-17T14:51:43.403+0100
2021-12-17T14:51:43.403+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] found local image via imageName: nginx:latest: timestamp=2021-12-17T14:51:43.403+0100
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.407+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.408+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] local images data: REDACTED
2021-12-17T14:51:43.409+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Docker image inspect from readFunc: {
	"Id": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"RepoTags": [
		"nginx:latest"
	],
	"RepoDigests": [
		"nginx@sha256:353c20f74d9b6aee359f30e8e4f69c3d7eaea2f610681c4a95849a2fd7c497f9"
	],
	"Parent": "",
	"Comment": "",
	"Created": "2021-07-06T19:39:40.385800548Z",
	"Container": "c0f61378a01130e56a6072f9409a77921c5089cb2552be7ceab5e44678d46c2b",
	"ContainerConfig": {
		"Hostname": "c0f61378a011",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"/bin/sh",
			"-c",
			"#(nop) ",
			"CMD [\"nginx\" \"-g\" \"daemon off;\"]"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"DockerVersion": "20.10.7",
	"Author": "",
	"Config": {
		"Hostname": "",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"Architecture": "amd64",
	"Os": "linux",
	"Size": 133175461,
	"VirtualSize": 133175461,
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/merged",
			"UpperDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff",
			"WorkDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/work"
		},
		"Name": "overlay2"
	},
	"RootFS": {
		"Type": "layers",
		"Layers": [
			"sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
			"sha256:ace9ed9bcfafbc909bc3e9451490652f685959db02a4e01e0528a868ee8eab3e",
			"sha256:48b4a40de3597ec0a28c2d4508dec64ae685ed0da77b128d0fb5c69cada91882",
			"sha256:c553c6ba5f1354e1980871b413e057950e0c02d2d7a66b39de2e03836048fda9",
			"sha256:d97733c0a3b64c08bc0dd286926a8eff1b162b4d9fad229eab807c6dc516c172",
			"sha256:9d1af766c81806211d5453b711169103e4f5c3c2609e1dfb9ea4dee7e96a7968"
		]
	},
	"Metadata": {
		"LastTagTime": "0001-01-01T00:00:00Z"
	}
}: timestamp=2021-12-17T14:51:43.409+0100
2021-12-17T14:51:43.410+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] found local image via imageName: nginx:latest: timestamp=2021-12-17T14:51:43.409+0100
2021-12-17T14:51:43.410+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_image.nginxImage
2021-12-17T14:51:43.410+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:43.410+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_image.nginxImage
2021-12-17T14:51:43.410+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
docker_image.nginxImage: Creation complete after 0s [id=sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2fnginx:latest]
2021-12-17T14:51:43.410+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from test.tfstate
2021-12-17T14:51:43.410+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:43.410+0100 [TRACE] statemgr.Filesystem: read nil snapshot
2021-12-17T14:51:43.410+0100 [TRACE] statemgr.Filesystem: no original state snapshot to back up
2021-12-17T14:51:43.411+0100 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 1
2021-12-17T14:51:43.411+0100 [TRACE] statemgr.Filesystem: writing snapshot at test.tfstate
2021-12-17T14:51:43.432+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:43.432+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodeApplyableResourceInstance)
2021-12-17T14:51:43.433+0100 [TRACE] readDiff: Read Create change from plan for docker_container.nginxContainer
2021-12-17T14:51:43.433+0100 [TRACE] readResourceInstanceState: reading state for docker_container.nginxContainer
2021-12-17T14:51:43.433+0100 [TRACE] readResourceInstanceState: no state present for docker_container.nginxContainer
2021-12-17T14:51:43.433+0100 [TRACE] readDiff: Read Create change from plan for docker_container.nginxContainer
2021-12-17T14:51:43.434+0100 [TRACE] Re-validating config for "docker_container.nginxContainer"
2021-12-17T14:51:43.434+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:43.435+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:43.437+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.436+0100
2021-12-17T14:51:43.437+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.436+0100
2021-12-17T14:51:43.437+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.437+0100
2021-12-17T14:51:43.437+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.437+0100
2021-12-17T14:51:43.437+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.437+0100
2021-12-17T14:51:43.438+0100 [WARN]  Provider "registry.terraform.io/kreuzwerker/docker" produced an invalid plan for docker_container.nginxContainer, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .logs: planned value cty.False for a non-computed attribute
      - .attach: planned value cty.False for a non-computed attribute
      - .rm: planned value cty.False for a non-computed attribute
      - .log_driver: planned value cty.StringVal("json-file") for a non-computed attribute
      - .read_only: planned value cty.False for a non-computed attribute
      - .restart: planned value cty.StringVal("no") for a non-computed attribute
      - .stdin_open: planned value cty.False for a non-computed attribute
      - .remove_volumes: planned value cty.True for a non-computed attribute
      - .start: planned value cty.True for a non-computed attribute
      - .must_run: planned value cty.True for a non-computed attribute
      - .tty: planned value cty.False for a non-computed attribute
      - .healthcheck: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .labels: attribute representing nested block must not be unknown itself; set nested attribute values to unknown instead
      - .ports[0].ip: planned value cty.StringVal("0.0.0.0") for a non-computed attribute
      - .ports[0].protocol: planned value cty.StringVal("tcp") for a non-computed attribute
2021-12-17T14:51:43.438+0100 [TRACE] checkPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2021-12-17T14:51:43.438+0100 [TRACE] readResourceInstanceState: reading state for docker_container.nginxContainer
2021-12-17T14:51:43.438+0100 [TRACE] readResourceInstanceState: no state present for docker_container.nginxContainer
docker_container.nginxContainer: Creating...
2021-12-17T14:51:43.438+0100 [INFO]  Starting apply for docker_container.nginxContainer
2021-12-17T14:51:43.439+0100 [DEBUG] docker_container.nginxContainer: applying the planned Create change
2021-12-17T14:51:43.439+0100 [TRACE] GRPCProvider: ApplyResourceChange
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "healthcheck" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "security_opts" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "labels" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "command" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "entrypoint" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] suppress diff ports: old and new don't have the same length: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "env" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.440+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] setting computed for "network_data" from ComputedKeys: timestamp=2021-12-17T14:51:43.440+0100
2021-12-17T14:51:43.447+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Docker image inspect from readFunc: {
	"Id": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"RepoTags": [
		"nginx:latest"
	],
	"RepoDigests": [
		"nginx@sha256:353c20f74d9b6aee359f30e8e4f69c3d7eaea2f610681c4a95849a2fd7c497f9"
	],
	"Parent": "",
	"Comment": "",
	"Created": "2021-07-06T19:39:40.385800548Z",
	"Container": "c0f61378a01130e56a6072f9409a77921c5089cb2552be7ceab5e44678d46c2b",
	"ContainerConfig": {
		"Hostname": "c0f61378a011",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"/bin/sh",
			"-c",
			"#(nop) ",
			"CMD [\"nginx\" \"-g\" \"daemon off;\"]"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"DockerVersion": "20.10.7",
	"Author": "",
	"Config": {
		"Hostname": "",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"Architecture": "amd64",
	"Os": "linux",
	"Size": 133175461,
	"VirtualSize": 133175461,
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/merged",
			"UpperDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff",
			"WorkDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/work"
		},
		"Name": "overlay2"
	},
	"RootFS": {
		"Type": "layers",
		"Layers": [
			"sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
			"sha256:ace9ed9bcfafbc909bc3e9451490652f685959db02a4e01e0528a868ee8eab3e",
			"sha256:48b4a40de3597ec0a28c2d4508dec64ae685ed0da77b128d0fb5c69cada91882",
			"sha256:c553c6ba5f1354e1980871b413e057950e0c02d2d7a66b39de2e03836048fda9",
			"sha256:d97733c0a3b64c08bc0dd286926a8eff1b162b4d9fad229eab807c6dc516c172",
			"sha256:9d1af766c81806211d5453b711169103e4f5c3c2609e1dfb9ea4dee7e96a7968"
		]
	},
	"Metadata": {
		"LastTagTime": "0001-01-01T00:00:00Z"
	}
}: timestamp=2021-12-17T14:51:43.447+0100
2021-12-17T14:51:43.448+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] found local image via imageName: sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f: timestamp=2021-12-17T14:51:43.447+0100
2021-12-17T14:51:43.738+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [INFO] Waiting for container: 'bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b' to run: max '15s seconds': timestamp=2021-12-17T14:51:43.738+0100
2021-12-17T14:51:43.749+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Waiting for state to become: [running]: timestamp=2021-12-17T14:51:43.748+0100
2021-12-17T14:51:43.855+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Docker container inspect: {
	"Id": "bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b",
	"Created": "2021-12-17T13:51:43.487490096Z",
	"Path": "/docker-entrypoint.sh",
	"Args": [
		"nginx",
		"-g",
		"daemon off;"
	],
	"State": {
		"Status": "running",
		"Running": true,
		"Paused": false,
		"Restarting": false,
		"OOMKilled": false,
		"Dead": false,
		"Pid": 3877,
		"ExitCode": 0,
		"Error": "",
		"StartedAt": "2021-12-17T13:51:43.755318332Z",
		"FinishedAt": "0001-01-01T00:00:00Z"
	},
	"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"ResolvConfPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/resolv.conf",
	"HostnamePath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hostname",
	"HostsPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hosts",
	"LogPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b-json.log",
	"Name": "/tutorial",
	"RestartCount": 0,
	"Driver": "overlay2",
	"Platform": "linux",
	"MountLabel": "",
	"ProcessLabel": "",
	"AppArmorProfile": "",
	"ExecIDs": null,
	"HostConfig": {
		"Binds": null,
		"ContainerIDFile": "",
		"LogConfig": {
			"Type": "json-file",
			"Config": {}
		},
		"NetworkMode": "default",
		"PortBindings": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"RestartPolicy": {
			"Name": "no",
			"MaximumRetryCount": 0
		},
		"AutoRemove": false,
		"VolumeDriver": "",
		"VolumesFrom": null,
		"CapAdd": null,
		"CapDrop": null,
		"CgroupnsMode": "host",
		"Dns": null,
		"DnsOptions": null,
		"DnsSearch": null,
		"ExtraHosts": null,
		"GroupAdd": null,
		"IpcMode": "private",
		"Cgroup": "",
		"Links": null,
		"OomScoreAdj": 0,
		"PidMode": "",
		"Privileged": false,
		"PublishAllPorts": false,
		"ReadonlyRootfs": false,
		"SecurityOpt": null,
		"UTSMode": "",
		"UsernsMode": "",
		"ShmSize": 67108864,
		"Runtime": "runc",
		"ConsoleSize": [
			0,
			0
		],
		"Isolation": "",
		"CpuShares": 0,
		"Memory": 0,
		"NanoCpus": 0,
		"CgroupParent": "",
		"BlkioWeight": 0,
		"BlkioWeightDevice": null,
		"BlkioDeviceReadBps": null,
		"BlkioDeviceWriteBps": null,
		"BlkioDeviceReadIOps": null,
		"BlkioDeviceWriteIOps": null,
		"CpuPeriod": 0,
		"CpuQuota": 0,
		"CpuRealtimePeriod": 0,
		"CpuRealtimeRuntime": 0,
		"CpusetCpus": "",
		"CpusetMems": "",
		"Devices": null,
		"DeviceCgroupRules": null,
		"DeviceRequests": null,
		"KernelMemory": 0,
		"KernelMemoryTCP": 0,
		"MemoryReservation": 0,
		"MemorySwap": 0,
		"MemorySwappiness": null,
		"OomKillDisable": false,
		"PidsLimit": null,
		"Ulimits": null,
		"CpuCount": 0,
		"CpuPercent": 0,
		"IOMaximumIOps": 0,
		"IOMaximumBandwidth": 0,
		"MaskedPaths": [
			"/proc/asound",
			"/proc/acpi",
			"/proc/kcore",
			"/proc/keys",
			"/proc/latency_stats",
			"/proc/timer_list",
			"/proc/timer_stats",
			"/proc/sched_debug",
			"/proc/scsi",
			"/sys/firmware"
		],
		"ReadonlyPaths": [
			"/proc/bus",
			"/proc/fs",
			"/proc/irq",
			"/proc/sys",
			"/proc/sysrq-trigger"
		],
		"Init": false
	},
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211-init/diff:/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff:/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/merged",
			"UpperDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/diff",
			"WorkDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/work"
		},
		"Name": "overlay2"
	},
	"Mounts": [],
	"Config": {
		"Hostname": "bd731b21006f",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"NetworkSettings": {
		"Bridge": "",
		"SandboxID": "1b6466ff49716ac77fb825e1a50c219a89216db21c492f3da69f7d2ae1b3e35d",
		"HairpinMode": false,
		"LinkLocalIPv6Address": "",
		"LinkLocalIPv6PrefixLen": 0,
		"Ports": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"SandboxKey": "/var/run/docker/netns/1b6466ff4971",
		"SecondaryIPAddresses": null,
		"SecondaryIPv6Addresses": null,
		"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
		"Gateway": "172.17.0.1",
		"GlobalIPv6Address": "",
		"GlobalIPv6PrefixLen": 0,
		"IPAddress": "172.17.0.2",
		"IPPrefixLen": 16,
		"IPv6Gateway": "",
		"MacAddress": "xxx",
		"Networks": {
			"bridge": {
				"IPAMConfig": null,
				"Links": null,
				"Aliases": null,
				"NetworkID": "15d8333bb24924af95bc624b999e0cc8b1388951a35a7fa80bfcb0b352636db7",
				"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
				"Gateway": "172.17.0.1",
				"IPAddress": "172.17.0.2",
				"IPPrefixLen": 16,
				"IPv6Gateway": "",
				"GlobalIPv6Address": "",
				"GlobalIPv6PrefixLen": 0,
				"MacAddress": "xxx",
				"DriverOpts": null
			}
		}
	}
}: timestamp=2021-12-17T14:51:43.854+0100
2021-12-17T14:51:43.856+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Container bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b is running: true: timestamp=2021-12-17T14:51:43.855+0100
2021-12-17T14:51:43.856+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:43 [DEBUG] Docker container inspect from stateFunc: {
	"Id": "bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b",
	"Created": "2021-12-17T13:51:43.487490096Z",
	"Path": "/docker-entrypoint.sh",
	"Args": [
		"nginx",
		"-g",
		"daemon off;"
	],
	"State": {
		"Status": "running",
		"Running": true,
		"Paused": false,
		"Restarting": false,
		"OOMKilled": false,
		"Dead": false,
		"Pid": 3877,
		"ExitCode": 0,
		"Error": "",
		"StartedAt": "2021-12-17T13:51:43.755318332Z",
		"FinishedAt": "0001-01-01T00:00:00Z"
	},
	"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"ResolvConfPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/resolv.conf",
	"HostnamePath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hostname",
	"HostsPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hosts",
	"LogPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b-json.log",
	"Name": "/tutorial",
	"RestartCount": 0,
	"Driver": "overlay2",
	"Platform": "linux",
	"MountLabel": "",
	"ProcessLabel": "",
	"AppArmorProfile": "",
	"ExecIDs": null,
	"HostConfig": {
		"Binds": null,
		"ContainerIDFile": "",
		"LogConfig": {
			"Type": "json-file",
			"Config": {}
		},
		"NetworkMode": "default",
		"PortBindings": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"RestartPolicy": {
			"Name": "no",
			"MaximumRetryCount": 0
		},
		"AutoRemove": false,
		"VolumeDriver": "",
		"VolumesFrom": null,
		"CapAdd": null,
		"CapDrop": null,
		"CgroupnsMode": "host",
		"Dns": null,
		"DnsOptions": null,
		"DnsSearch": null,
		"ExtraHosts": null,
		"GroupAdd": null,
		"IpcMode": "private",
		"Cgroup": "",
		"Links": null,
		"OomScoreAdj": 0,
		"PidMode": "",
		"Privileged": false,
		"PublishAllPorts": false,
		"ReadonlyRootfs": false,
		"SecurityOpt": null,
		"UTSMode": "",
		"UsernsMode": "",
		"ShmSize": 67108864,
		"Runtime": "runc",
		"ConsoleSize": [
			0,
			0
		],
		"Isolation": "",
		"CpuShares": 0,
		"Memory": 0,
		"NanoCpus": 0,
		"CgroupParent": "",
		"BlkioWeight": 0,
		"BlkioWeightDevice": null,
		"BlkioDeviceReadBps": null,
		"BlkioDeviceWriteBps": null,
		"BlkioDeviceReadIOps": null,
		"BlkioDeviceWriteIOps": null,
		"CpuPeriod": 0,
		"CpuQuota": 0,
		"CpuRealtimePeriod": 0,
		"CpuRealtimeRuntime": 0,
		"CpusetCpus": "",
		"CpusetMems": "",
		"Devices": null,
		"DeviceCgroupRules": null,
		"DeviceRequests": null,
		"KernelMemory": 0,
		"KernelMemoryTCP": 0,
		"MemoryReservation": 0,
		"MemorySwap": 0,
		"MemorySwappiness": null,
		"OomKillDisable": false,
		"PidsLimit": null,
		"Ulimits": null,
		"CpuCount": 0,
		"CpuPercent": 0,
		"IOMaximumIOps": 0,
		"IOMaximumBandwidth": 0,
		"MaskedPaths": [
			"/proc/asound",
			"/proc/acpi",
			"/proc/kcore",
			"/proc/keys",
			"/proc/latency_stats",
			"/proc/timer_list",
			"/proc/timer_stats",
			"/proc/sched_debug",
			"/proc/scsi",
			"/sys/firmware"
		],
		"ReadonlyPaths": [
			"/proc/bus",
			"/proc/fs",
			"/proc/irq",
			"/proc/sys",
			"/proc/sysrq-trigger"
		],
		"Init": false
	},
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211-init/diff:/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff:/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/merged",
			"UpperDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/diff",
			"WorkDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/work"
		},
		"Name": "overlay2"
	},
	"Mounts": [],
	"Config": {
		"Hostname": "bd731b21006f",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"NetworkSettings": {
		"Bridge": "",
		"SandboxID": "1b6466ff49716ac77fb825e1a50c219a89216db21c492f3da69f7d2ae1b3e35d",
		"HairpinMode": false,
		"LinkLocalIPv6Address": "",
		"LinkLocalIPv6PrefixLen": 0,
		"Ports": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"SandboxKey": "/var/run/docker/netns/1b6466ff4971",
		"SecondaryIPAddresses": null,
		"SecondaryIPv6Addresses": null,
		"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
		"Gateway": "172.17.0.1",
		"GlobalIPv6Address": "",
		"GlobalIPv6PrefixLen": 0,
		"IPAddress": "172.17.0.2",
		"IPPrefixLen": 16,
		"IPv6Gateway": "",
		"MacAddress": "xxx",
		"Networks": {
			"bridge": {
				"IPAMConfig": null,
				"Links": null,
				"Aliases": null,
				"NetworkID": "15d8333bb24924af95bc624b999e0cc8b1388951a35a7fa80bfcb0b352636db7",
				"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
				"Gateway": "172.17.0.1",
				"IPAddress": "172.17.0.2",
				"IPPrefixLen": 16,
				"IPv6Gateway": "",
				"GlobalIPv6Address": "",
				"GlobalIPv6PrefixLen": 0,
				"MacAddress": "xxx",
				"DriverOpts": null
			}
		}
	}
}: timestamp=2021-12-17T14:51:43.855+0100
2021-12-17T14:51:43.859+0100 [WARN]  Provider "provider[\"registry.terraform.io/kreuzwerker/docker\"]" produced an unexpected new value for docker_container.nginxContainer, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .memory: was null, but now cty.NumberIntVal(0)
      - .cpu_set: was null, but now cty.StringVal("")
      - .domainname: was null, but now cty.StringVal("")
      - .publish_all_ports: was null, but now cty.False
      - .privileged: was null, but now cty.False
      - .userns_mode: was null, but now cty.StringVal("")
      - .memory_swap: was null, but now cty.NumberIntVal(0)
      - .network_mode: was null, but now cty.StringVal("default")
      - .user: was null, but now cty.StringVal("")
      - .max_retry_count: was null, but now cty.NumberIntVal(0)
      - .working_dir: was null, but now cty.StringVal("")
      - .cpu_shares: was null, but now cty.NumberIntVal(0)
      - .pid_mode: was null, but now cty.StringVal("")
2021-12-17T14:51:43.859+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_container.nginxContainer
2021-12-17T14:51:43.859+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:43.860+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_container.nginxContainer
2021-12-17T14:51:43.860+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
docker_container.nginxContainer: Creation complete after 1s [id=bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b]
2021-12-17T14:51:43.860+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from test.tfstate
2021-12-17T14:51:43.860+0100 [TRACE] statemgr.Filesystem: read snapshot with lineage "3e7b8a9b-f420-cb62-565f-0870e987ccbe" serial 1
2021-12-17T14:51:43.860+0100 [TRACE] statemgr.Filesystem: no original state snapshot to back up
2021-12-17T14:51:43.860+0100 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 2
2021-12-17T14:51:43.860+0100 [TRACE] statemgr.Filesystem: writing snapshot at test.tfstate
2021-12-17T14:51:43.881+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:43.881+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-12-17T14:51:43.881+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:43.883+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:43.885+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77877
2021-12-17T14:51:43.885+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:43.885+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": visit complete
2021-12-17T14:51:43.885+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-12-17T14:51:43.885+0100 [TRACE] vertex "root": visit complete
2021-12-17T14:51:43.885+0100 [TRACE] statemgr.Filesystem: no original state snapshot to back up
2021-12-17T14:51:43.885+0100 [TRACE] statemgr.Filesystem: state has changed since last snapshot, so incrementing serial to 3
2021-12-17T14:51:43.885+0100 [TRACE] statemgr.Filesystem: writing snapshot at test.tfstate
2021-12-17T14:51:43.905+0100 [TRACE] statemgr.Filesystem: removing lock metadata file .test.tfstate.lock.info
2021-12-17T14:51:43.908+0100 [TRACE] statemgr.Filesystem: unlocking test.tfstate using fcntl flock

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
2021-12-17T14:51:43.949+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:43.949+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:43.949+0100 [INFO]  CLI args: []string{"terraform", "plan", "-out", "test.plan", "-state", "test.tfstate"}
2021-12-17T14:51:43.949+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:43.949+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:43.949+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:43.949+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:43.949+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:43.949+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:43.950+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:43.950+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:43.950+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:43.950+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:43.950+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:43.950+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:43.951+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:43.951+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:43.951+0100 [INFO]  CLI command args: []string{"plan", "-out", "test.plan", "-state", "test.tfstate"}
2021-12-17T14:51:43.952+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-12-17T14:51:43.952+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-12-17T14:51:43.953+0100 [DEBUG] New state was assigned lineage "f5a45aca-d7bd-dd77-f507-4d80e3c1f35f"
2021-12-17T14:51:43.953+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-12-17T14:51:43.953+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-12-17T14:51:43.953+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:43.953+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:43.954+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:44.013+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:44.014+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:44.014+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:44.014+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-12-17T14:51:44.014+0100 [TRACE] backend/local: CLI option -state is overriding state path to test.tfstate
2021-12-17T14:51:44.015+0100 [INFO]  backend/local: starting Plan operation
2021-12-17T14:51:44.015+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-12-17T14:51:44.015+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from test.tfstate
 - write new snapshots to test.tfstate
 - create any backup at test.tfstate.backup
2021-12-17T14:51:44.015+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-12-17T14:51:44.015+0100 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at test.tfstate
2021-12-17T14:51:44.015+0100 [TRACE] statemgr.Filesystem: existing snapshot has lineage "3e7b8a9b-f420-cb62-565f-0870e987ccbe" serial 3
2021-12-17T14:51:44.015+0100 [TRACE] statemgr.Filesystem: locking test.tfstate using fcntl flock
2021-12-17T14:51:44.015+0100 [TRACE] statemgr.Filesystem: writing lock metadata to .test.tfstate.lock.info
2021-12-17T14:51:44.015+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-12-17T14:51:44.015+0100 [TRACE] statemgr.Filesystem: reading latest snapshot from test.tfstate
2021-12-17T14:51:44.016+0100 [TRACE] statemgr.Filesystem: read snapshot with lineage "3e7b8a9b-f420-cb62-565f-0870e987ccbe" serial 3
2021-12-17T14:51:44.016+0100 [TRACE] backend/local: populating backend.LocalRun for current working directory
2021-12-17T14:51:44.016+0100 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/kreuzwerker/docker has 2.15.0 to satisfy "~> 2.12"
2021-12-17T14:51:44.016+0100 [TRACE] terraform.NewContext: starting
2021-12-17T14:51:44.016+0100 [TRACE] terraform.NewContext: complete
2021-12-17T14:51:44.016+0100 [TRACE] backend/local: requesting interactive input, if necessary
2021-12-17T14:51:44.016+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"
2021-12-17T14:51:44.016+0100 [TRACE] terraform.contextPlugins: Initializing provider "registry.terraform.io/kreuzwerker/docker" to read its schema
2021-12-17T14:51:44.016+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:44.016+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:44.023+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:44.026+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77879
2021-12-17T14:51:44.026+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:44.044+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:44.043+0100
2021-12-17T14:51:44.077+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin302573930 network=unix timestamp=2021-12-17T14:51:44.077+0100
2021-12-17T14:51:44.077+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:44.105+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:44.105+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:44.109+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:44.111+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:44.113+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77879
2021-12-17T14:51:44.113+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:44.113+0100 [TRACE] Context.Input: Prompting for provider arguments
2021-12-17T14:51:44.113+0100 [TRACE] Context.Input: Provider provider.docker declared at main.tf.json:18,15-16
2021-12-17T14:51:44.113+0100 [TRACE] Context.Input: Input for provider.docker: map[string]cty.Value{}
2021-12-17T14:51:44.113+0100 [TRACE] backend/local: running validation operation
2021-12-17T14:51:44.113+0100 [DEBUG] Building and walking validate graph
2021-12-17T14:51:44.113+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-12-17T14:51:44.113+0100 [TRACE] ConfigTransformer: Starting for path:
2021-12-17T14:51:44.113+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
  ------
2021-12-17T14:51:44.113+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-12-17T14:51:44.113+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021-12-17T14:51:44.113+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-12-17T14:51:44.113+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-12-17T14:51:44.113+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-12-17T14:51:44.113+0100 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021-12-17T14:51:44.113+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-12-17T14:51:44.113+0100 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-12-17T14:51:44.114+0100 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-12-17T14:51:44.114+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage" (*terraform.NodeValidatableResource) config from main.tf.json:24,21-22
2021-12-17T14:51:44.114+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage
2021-12-17T14:51:44.114+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer" (*terraform.NodeValidatableResource) config from main.tf.json:36,25-26
2021-12-17T14:51:44.114+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-12-17T14:51:44.114+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider configuration from main.tf.json:18,15-16
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-12-17T14:51:44.114+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage
2021-12-17T14:51:44.114+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.114+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer
2021-12-17T14:51:44.114+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer" (*terraform.NodeValidatableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-12-17T14:51:44.114+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-12-17T14:51:44.114+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage
2021-12-17T14:51:44.114+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer
2021-12-17T14:51:44.114+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-12-17T14:51:44.114+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-12-17T14:51:44.114+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:44.114+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage" references: []
2021-12-17T14:51:44.115+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer" references: [docker_image.nginxImage]
2021-12-17T14:51:44.115+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/kreuzwerker/docker\"]" references: []
2021-12-17T14:51:44.115+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.115+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-12-17T14:51:44.115+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-12-17T14:51:44.115+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-12-17T14:51:44.115+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-12-17T14:51:44.115+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:44.115+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:44.115+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-12-17T14:51:44.115+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-12-17T14:51:44.115+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-12-17T14:51:44.116+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.116+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-12-17T14:51:44.117+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:44.117+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-12-17T14:51:44.117+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodeValidatableResource
    docker_image.nginxImage - *terraform.NodeValidatableResource
  docker_image.nginxImage - *terraform.NodeValidatableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer - *terraform.NodeValidatableResource
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:44.117+0100 [DEBUG] Starting graph walk: walkValidate
2021-12-17T14:51:44.117+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": starting visit (*terraform.NodeApplyableProvider)
2021-12-17T14:51:44.117+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:44.117+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:44.125+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:44.128+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77880
2021-12-17T14:51:44.129+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:44.147+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:44.147+0100
2021-12-17T14:51:44.181+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:44.181+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin730767815 network=unix timestamp=2021-12-17T14:51:44.181+0100
2021-12-17T14:51:44.207+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.207+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:44.207+0100 [TRACE] NodeApplyableProvider: validating configuration for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.208+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/kreuzwerker/docker"]: using explicit config only
2021-12-17T14:51:44.208+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": visit complete
2021-12-17T14:51:44.208+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodeValidatableResource)
2021-12-17T14:51:44.208+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:44.208+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:44.212+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:44.212+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodeValidatableResource)
2021-12-17T14:51:44.213+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:44.213+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:44.213+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-12-17T14:51:44.213+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:44.214+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:44.216+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77880
2021-12-17T14:51:44.216+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:44.216+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": visit complete
2021-12-17T14:51:44.216+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-12-17T14:51:44.216+0100 [TRACE] vertex "root": visit complete
2021-12-17T14:51:44.216+0100 [INFO]  backend/local: plan calling Plan
2021-12-17T14:51:44.216+0100 [DEBUG] Building and walking plan graph for NormalMode
2021-12-17T14:51:44.216+0100 [TRACE] refactoring.ApplyMoves: No 'moved' statements to consider in this configuration
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.ConfigTransformer
2021-12-17T14:51:44.216+0100 [TRACE] ConfigTransformer: Starting for path:
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  ------
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.LocalTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.OutputTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.StateTransformer
2021-12-17T14:51:44.216+0100 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2021-12-17T14:51:44.216+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf.json:24,21-22
2021-12-17T14:51:44.216+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_image.nginxImage (expand)
2021-12-17T14:51:44.216+0100 [TRACE] AttachResourceConfigTransformer: attaching to "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) config from main.tf.json:36,25-26
2021-12-17T14:51:44.216+0100 [TRACE] AttachResourceConfigTransformer: attaching provider meta configs to docker_container.nginxContainer (expand)
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2021-12-17T14:51:44.216+0100 [TRACE] ProviderConfigTransformer: attaching to "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider configuration from main.tf.json:18,15-16
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2021-12-17T14:51:44.216+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_image.nginxImage (expand)
2021-12-17T14:51:44.216+0100 [DEBUG] ProviderTransformer: "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.216+0100 [TRACE] ProviderTransformer: exact match for provider["registry.terraform.io/kreuzwerker/docker"] serving docker_container.nginxContainer (expand)
2021-12-17T14:51:44.216+0100 [DEBUG] ProviderTransformer: "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) needs provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2021-12-17T14:51:44.216+0100 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2021-12-17T14:51:44.216+0100 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.216+0100 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2021-12-17T14:51:44.217+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_image.nginxImage (expand)
2021-12-17T14:51:44.217+0100 [TRACE] AttachSchemaTransformer: attaching resource schema to docker_container.nginxContainer (expand)
2021-12-17T14:51:44.217+0100 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.ModuleExpansionTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.ModuleExpansionTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:44.217+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage (expand)" references: []
2021-12-17T14:51:44.217+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer (expand)" references: [docker_image.nginxImage (expand)]
2021-12-17T14:51:44.217+0100 [DEBUG] ReferenceTransformer: "provider[\"registry.terraform.io/kreuzwerker/docker\"]" references: []
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2021-12-17T14:51:44.217+0100 [TRACE] AttachDependenciesTransformer: docker_image.nginxImage depends on []
2021-12-17T14:51:44.217+0100 [TRACE] AttachDependenciesTransformer: docker_container.nginxContainer depends on [docker_image.nginxImage]
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.attachDataResourceDependsOnTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.attachDataResourceDependsOnTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2021-12-17T14:51:44.217+0100 [TRACE] ForcedCBDTransformer: "docker_image.nginxImage (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-12-17T14:51:44.217+0100 [TRACE] ForcedCBDTransformer: "docker_container.nginxContainer (expand)" (*terraform.nodeExpandPlannableResource) has no CBD descendent, so skipping
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  ------
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.CloseRootModuleTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.CloseRootModuleTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:44.217+0100 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2021-12-17T14:51:44.217+0100 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
    docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
  docker_image.nginxImage (expand) - *terraform.nodeExpandPlannableResource
    provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] - *terraform.NodeApplyableProvider
  provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
    docker_container.nginxContainer (expand) - *terraform.nodeExpandPlannableResource
  root - *terraform.nodeCloseModule
    provider["registry.terraform.io/kreuzwerker/docker"] (close) - *terraform.graphNodeCloseProvider
  ------
2021-12-17T14:51:44.217+0100 [DEBUG] Starting graph walk: walkPlan
2021-12-17T14:51:44.218+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": starting visit (*terraform.NodeApplyableProvider)
2021-12-17T14:51:44.218+0100 [DEBUG] created provider logger: level=trace
2021-12-17T14:51:44.218+0100 [INFO]  provider: configuring client automatic mTLS
2021-12-17T14:51:44.226+0100 [DEBUG] provider: starting plugin: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 args=[.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0]
2021-12-17T14:51:44.229+0100 [DEBUG] provider: plugin started: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77881
2021-12-17T14:51:44.229+0100 [DEBUG] provider: waiting for RPC address: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0
2021-12-17T14:51:44.247+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: configuring server automatic mTLS: timestamp=2021-12-17T14:51:44.247+0100
2021-12-17T14:51:44.280+0100 [DEBUG] provider: using plugin: version=5
2021-12-17T14:51:44.281+0100 [DEBUG] provider.terraform-provider-docker_v2.15.0: plugin address: address=/var/folders/19/0g2813wd0g77r4dvy2_xtmfw0000gq/T/plugin453524796 network=unix timestamp=2021-12-17T14:51:44.280+0100
2021-12-17T14:51:44.307+0100 [TRACE] provider.stdio: waiting for stdio data
2021-12-17T14:51:44.307+0100 [TRACE] BuiltinEvalContext: Initialized "provider[\"registry.terraform.io/kreuzwerker/docker\"]" provider for provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.307+0100 [TRACE] NodeApplyableProvider: configuring provider["registry.terraform.io/kreuzwerker/docker"]
2021-12-17T14:51:44.307+0100 [TRACE] buildProviderConfig for provider["registry.terraform.io/kreuzwerker/docker"]: using explicit config only
2021-12-17T14:51:44.307+0100 [TRACE] GRPCProvider: GetProviderSchema
2021-12-17T14:51:44.311+0100 [TRACE] GRPCProvider: ValidateProviderConfig
2021-12-17T14:51:44.314+0100 [WARN]  ValidateProviderConfig from "provider[\"registry.terraform.io/kreuzwerker/docker\"]" changed the config value, but that value is unused
2021-12-17T14:51:44.314+0100 [TRACE] GRPCProvider: ConfigureProvider
2021-12-17T14:51:44.316+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"]": visit complete
2021-12-17T14:51:44.316+0100 [TRACE] vertex "docker_image.nginxImage (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-12-17T14:51:44.316+0100 [TRACE] vertex "docker_image.nginxImage (expand)": expanding dynamic subgraph
2021-12-17T14:51:44.316+0100 [TRACE] vertex "docker_image.nginxImage (expand)": entering dynamic subgraph
2021-12-17T14:51:44.316+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodePlannableResource)
2021-12-17T14:51:44.316+0100 [TRACE] vertex "docker_image.nginxImage": expanding dynamic subgraph
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-12-17T14:51:44.316+0100 [TRACE] ResourceCountTransformer: adding docker_image.nginxImage as *terraform.NodePlannableResourceInstance
2021-12-17T14:51:44.316+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  docker_image.nginxImage - *terraform.NodePlannableResourceInstance
  ------
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-12-17T14:51:44.316+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:44.316+0100 [TRACE] NodeAbstractResourceInstance.AttachResourceState for docker_image.nginxImage
2021-12-17T14:51:44.316+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:44.316+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:44.316+0100 [DEBUG] ReferenceTransformer: "docker_image.nginxImage" references: []
2021-12-17T14:51:44.316+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-12-17T14:51:44.316+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-12-17T14:51:44.317+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-12-17T14:51:44.317+0100 [TRACE] vertex "docker_image.nginxImage": entering dynamic subgraph
2021-12-17T14:51:44.317+0100 [TRACE] vertex "docker_image.nginxImage": starting visit (*terraform.NodePlannableResourceInstance)
2021-12-17T14:51:44.317+0100 [TRACE] readResourceInstanceState: reading state for docker_image.nginxImage
2021-12-17T14:51:44.317+0100 [TRACE] upgradeResourceState: schema version of docker_image.nginxImage is still 0; calling provider "docker" for any other minor fixups
2021-12-17T14:51:44.317+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-12-17T14:51:44.317+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for docker_image.nginxImage
2021-12-17T14:51:44.317+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:44.317+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_image.nginxImage
2021-12-17T14:51:44.317+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:44.317+0100 [TRACE] NodeAbstractResourceInstance.refresh for docker_image.nginxImage
docker_image.nginxImage: Refreshing state... [id=sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2fnginx:latest]
2021-12-17T14:51:44.317+0100 [TRACE] GRPCProvider: ReadResource
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.324+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.325+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.326+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] local images data: REDACTED
2021-12-17T14:51:44.328+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] Docker image inspect from readFunc: {
	"Id": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"RepoTags": [
		"nginx:latest"
	],
	"RepoDigests": [
		"nginx@sha256:353c20f74d9b6aee359f30e8e4f69c3d7eaea2f610681c4a95849a2fd7c497f9"
	],
	"Parent": "",
	"Comment": "",
	"Created": "2021-07-06T19:39:40.385800548Z",
	"Container": "c0f61378a01130e56a6072f9409a77921c5089cb2552be7ceab5e44678d46c2b",
	"ContainerConfig": {
		"Hostname": "c0f61378a011",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"/bin/sh",
			"-c",
			"#(nop) ",
			"CMD [\"nginx\" \"-g\" \"daemon off;\"]"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"DockerVersion": "20.10.7",
	"Author": "",
	"Config": {
		"Hostname": "",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:ade63a6b00b9f5be8d14b801fe6df6f72a34aa695ba01db7380d345ed19cad70",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"Architecture": "amd64",
	"Os": "linux",
	"Size": 133175461,
	"VirtualSize": 133175461,
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/merged",
			"UpperDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff",
			"WorkDir": "/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/work"
		},
		"Name": "overlay2"
	},
	"RootFS": {
		"Type": "layers",
		"Layers": [
			"sha256:764055ebc9a7a290b64d17cf9ea550f1099c202d83795aa967428ebdf335c9f7",
			"sha256:ace9ed9bcfafbc909bc3e9451490652f685959db02a4e01e0528a868ee8eab3e",
			"sha256:48b4a40de3597ec0a28c2d4508dec64ae685ed0da77b128d0fb5c69cada91882",
			"sha256:c553c6ba5f1354e1980871b413e057950e0c02d2d7a66b39de2e03836048fda9",
			"sha256:d97733c0a3b64c08bc0dd286926a8eff1b162b4d9fad229eab807c6dc516c172",
			"sha256:9d1af766c81806211d5453b711169103e4f5c3c2609e1dfb9ea4dee7e96a7968"
		]
	},
	"Metadata": {
		"LastTagTime": "0001-01-01T00:00:00Z"
	}
}: timestamp=2021-12-17T14:51:44.328+0100
2021-12-17T14:51:44.330+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] found local image via imageName: nginx:latest: timestamp=2021-12-17T14:51:44.328+0100
2021-12-17T14:51:44.330+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_image.nginxImage
2021-12-17T14:51:44.330+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:44.330+0100 [TRACE] Re-validating config for "docker_image.nginxImage"
2021-12-17T14:51:44.330+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:44.331+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:44.333+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_image.nginxImage
2021-12-17T14:51:44.333+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_image.nginxImage
2021-12-17T14:51:44.333+0100 [TRACE] writeChange: recorded NoOp change for docker_image.nginxImage
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_image.nginxImage": dynamic subgraph completed successfully
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_image.nginxImage": visit complete
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_image.nginxImage (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_image.nginxImage (expand)": visit complete
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": starting visit (*terraform.nodeExpandPlannableResource)
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": expanding dynamic subgraph
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": entering dynamic subgraph
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodePlannableResource)
2021-12-17T14:51:44.333+0100 [TRACE] vertex "docker_container.nginxContainer": expanding dynamic subgraph
2021-12-17T14:51:44.333+0100 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2021-12-17T14:51:44.333+0100 [TRACE] ResourceCountTransformer: adding docker_container.nginxContainer as *terraform.NodePlannableResourceInstance
2021-12-17T14:51:44.333+0100 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  docker_container.nginxContainer - *terraform.NodePlannableResourceInstance
  ------
2021-12-17T14:51:44.333+0100 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceCountTransformer
2021-12-17T14:51:44.333+0100 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceCountTransformer (no changes)
2021-12-17T14:51:44.333+0100 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2021-12-17T14:51:44.333+0100 [TRACE] NodeAbstractResourceInstance.AttachResourceState for docker_container.nginxContainer
2021-12-17T14:51:44.333+0100 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2021-12-17T14:51:44.333+0100 [TRACE] Executing graph transform *terraform.TargetsTransformer
2021-12-17T14:51:44.333+0100 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2021-12-17T14:51:44.333+0100 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2021-12-17T14:51:44.334+0100 [DEBUG] ReferenceTransformer: "docker_container.nginxContainer" references: []
2021-12-17T14:51:44.334+0100 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2021-12-17T14:51:44.334+0100 [TRACE] Executing graph transform *terraform.RootTransformer
2021-12-17T14:51:44.334+0100 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2021-12-17T14:51:44.334+0100 [TRACE] vertex "docker_container.nginxContainer": entering dynamic subgraph
2021-12-17T14:51:44.334+0100 [TRACE] vertex "docker_container.nginxContainer": starting visit (*terraform.NodePlannableResourceInstance)
2021-12-17T14:51:44.334+0100 [TRACE] readResourceInstanceState: reading state for docker_container.nginxContainer
2021-12-17T14:51:44.334+0100 [TRACE] upgradeResourceState: schema version of docker_container.nginxContainer is still 2; calling provider "docker" for any other minor fixups
2021-12-17T14:51:44.334+0100 [TRACE] GRPCProvider: UpgradeResourceState
2021-12-17T14:51:44.336+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to prevRunState for docker_container.nginxContainer
2021-12-17T14:51:44.336+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:44.337+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_container.nginxContainer
2021-12-17T14:51:44.337+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:44.337+0100 [TRACE] NodeAbstractResourceInstance.refresh for docker_container.nginxContainer
docker_container.nginxContainer: Refreshing state... [id=bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b]
2021-12-17T14:51:44.338+0100 [TRACE] GRPCProvider: ReadResource
2021-12-17T14:51:44.339+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [INFO] Waiting for container: 'bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b' to run: max '15s seconds': timestamp=2021-12-17T14:51:44.338+0100
2021-12-17T14:51:44.347+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] Waiting for state to become: [running]: timestamp=2021-12-17T14:51:44.347+0100
2021-12-17T14:51:44.451+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] Docker container inspect: {
	"Id": "bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b",
	"Created": "2021-12-17T13:51:43.487490096Z",
	"Path": "/docker-entrypoint.sh",
	"Args": [
		"nginx",
		"-g",
		"daemon off;"
	],
	"State": {
		"Status": "running",
		"Running": true,
		"Paused": false,
		"Restarting": false,
		"OOMKilled": false,
		"Dead": false,
		"Pid": 3877,
		"ExitCode": 0,
		"Error": "",
		"StartedAt": "2021-12-17T13:51:43.755318332Z",
		"FinishedAt": "0001-01-01T00:00:00Z"
	},
	"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"ResolvConfPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/resolv.conf",
	"HostnamePath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hostname",
	"HostsPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hosts",
	"LogPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b-json.log",
	"Name": "/tutorial",
	"RestartCount": 0,
	"Driver": "overlay2",
	"Platform": "linux",
	"MountLabel": "",
	"ProcessLabel": "",
	"AppArmorProfile": "",
	"ExecIDs": null,
	"HostConfig": {
		"Binds": null,
		"ContainerIDFile": "",
		"LogConfig": {
			"Type": "json-file",
			"Config": {}
		},
		"NetworkMode": "default",
		"PortBindings": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"RestartPolicy": {
			"Name": "no",
			"MaximumRetryCount": 0
		},
		"AutoRemove": false,
		"VolumeDriver": "",
		"VolumesFrom": null,
		"CapAdd": null,
		"CapDrop": null,
		"CgroupnsMode": "host",
		"Dns": null,
		"DnsOptions": null,
		"DnsSearch": null,
		"ExtraHosts": null,
		"GroupAdd": null,
		"IpcMode": "private",
		"Cgroup": "",
		"Links": null,
		"OomScoreAdj": 0,
		"PidMode": "",
		"Privileged": false,
		"PublishAllPorts": false,
		"ReadonlyRootfs": false,
		"SecurityOpt": null,
		"UTSMode": "",
		"UsernsMode": "",
		"ShmSize": 67108864,
		"Runtime": "runc",
		"ConsoleSize": [
			0,
			0
		],
		"Isolation": "",
		"CpuShares": 0,
		"Memory": 0,
		"NanoCpus": 0,
		"CgroupParent": "",
		"BlkioWeight": 0,
		"BlkioWeightDevice": null,
		"BlkioDeviceReadBps": null,
		"BlkioDeviceWriteBps": null,
		"BlkioDeviceReadIOps": null,
		"BlkioDeviceWriteIOps": null,
		"CpuPeriod": 0,
		"CpuQuota": 0,
		"CpuRealtimePeriod": 0,
		"CpuRealtimeRuntime": 0,
		"CpusetCpus": "",
		"CpusetMems": "",
		"Devices": null,
		"DeviceCgroupRules": null,
		"DeviceRequests": null,
		"KernelMemory": 0,
		"KernelMemoryTCP": 0,
		"MemoryReservation": 0,
		"MemorySwap": 0,
		"MemorySwappiness": null,
		"OomKillDisable": false,
		"PidsLimit": null,
		"Ulimits": null,
		"CpuCount": 0,
		"CpuPercent": 0,
		"IOMaximumIOps": 0,
		"IOMaximumBandwidth": 0,
		"MaskedPaths": [
			"/proc/asound",
			"/proc/acpi",
			"/proc/kcore",
			"/proc/keys",
			"/proc/latency_stats",
			"/proc/timer_list",
			"/proc/timer_stats",
			"/proc/sched_debug",
			"/proc/scsi",
			"/sys/firmware"
		],
		"ReadonlyPaths": [
			"/proc/bus",
			"/proc/fs",
			"/proc/irq",
			"/proc/sys",
			"/proc/sysrq-trigger"
		],
		"Init": false
	},
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211-init/diff:/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff:/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/merged",
			"UpperDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/diff",
			"WorkDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/work"
		},
		"Name": "overlay2"
	},
	"Mounts": [],
	"Config": {
		"Hostname": "bd731b21006f",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"NetworkSettings": {
		"Bridge": "",
		"SandboxID": "1b6466ff49716ac77fb825e1a50c219a89216db21c492f3da69f7d2ae1b3e35d",
		"HairpinMode": false,
		"LinkLocalIPv6Address": "",
		"LinkLocalIPv6PrefixLen": 0,
		"Ports": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"SandboxKey": "/var/run/docker/netns/1b6466ff4971",
		"SecondaryIPAddresses": null,
		"SecondaryIPv6Addresses": null,
		"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
		"Gateway": "172.17.0.1",
		"GlobalIPv6Address": "",
		"GlobalIPv6PrefixLen": 0,
		"IPAddress": "172.17.0.2",
		"IPPrefixLen": 16,
		"IPv6Gateway": "",
		"MacAddress": "xxx",
		"Networks": {
			"bridge": {
				"IPAMConfig": null,
				"Links": null,
				"Aliases": null,
				"NetworkID": "15d8333bb24924af95bc624b999e0cc8b1388951a35a7fa80bfcb0b352636db7",
				"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
				"Gateway": "172.17.0.1",
				"IPAddress": "172.17.0.2",
				"IPPrefixLen": 16,
				"IPv6Gateway": "",
				"GlobalIPv6Address": "",
				"GlobalIPv6PrefixLen": 0,
				"MacAddress": "xxx",
				"DriverOpts": null
			}
		}
	}
}: timestamp=2021-12-17T14:51:44.451+0100
2021-12-17T14:51:44.452+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] Container bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b is running: true: timestamp=2021-12-17T14:51:44.451+0100
2021-12-17T14:51:44.452+0100 [INFO]  provider.terraform-provider-docker_v2.15.0: 2021/12/17 14:51:44 [DEBUG] Docker container inspect from stateFunc: {
	"Id": "bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b",
	"Created": "2021-12-17T13:51:43.487490096Z",
	"Path": "/docker-entrypoint.sh",
	"Args": [
		"nginx",
		"-g",
		"daemon off;"
	],
	"State": {
		"Status": "running",
		"Running": true,
		"Paused": false,
		"Restarting": false,
		"OOMKilled": false,
		"Dead": false,
		"Pid": 3877,
		"ExitCode": 0,
		"Error": "",
		"StartedAt": "2021-12-17T13:51:43.755318332Z",
		"FinishedAt": "0001-01-01T00:00:00Z"
	},
	"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
	"ResolvConfPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/resolv.conf",
	"HostnamePath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hostname",
	"HostsPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/hosts",
	"LogPath": "/var/lib/docker/containers/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b/bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b-json.log",
	"Name": "/tutorial",
	"RestartCount": 0,
	"Driver": "overlay2",
	"Platform": "linux",
	"MountLabel": "",
	"ProcessLabel": "",
	"AppArmorProfile": "",
	"ExecIDs": null,
	"HostConfig": {
		"Binds": null,
		"ContainerIDFile": "",
		"LogConfig": {
			"Type": "json-file",
			"Config": {}
		},
		"NetworkMode": "default",
		"PortBindings": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"RestartPolicy": {
			"Name": "no",
			"MaximumRetryCount": 0
		},
		"AutoRemove": false,
		"VolumeDriver": "",
		"VolumesFrom": null,
		"CapAdd": null,
		"CapDrop": null,
		"CgroupnsMode": "host",
		"Dns": null,
		"DnsOptions": null,
		"DnsSearch": null,
		"ExtraHosts": null,
		"GroupAdd": null,
		"IpcMode": "private",
		"Cgroup": "",
		"Links": null,
		"OomScoreAdj": 0,
		"PidMode": "",
		"Privileged": false,
		"PublishAllPorts": false,
		"ReadonlyRootfs": false,
		"SecurityOpt": null,
		"UTSMode": "",
		"UsernsMode": "",
		"ShmSize": 67108864,
		"Runtime": "runc",
		"ConsoleSize": [
			0,
			0
		],
		"Isolation": "",
		"CpuShares": 0,
		"Memory": 0,
		"NanoCpus": 0,
		"CgroupParent": "",
		"BlkioWeight": 0,
		"BlkioWeightDevice": null,
		"BlkioDeviceReadBps": null,
		"BlkioDeviceWriteBps": null,
		"BlkioDeviceReadIOps": null,
		"BlkioDeviceWriteIOps": null,
		"CpuPeriod": 0,
		"CpuQuota": 0,
		"CpuRealtimePeriod": 0,
		"CpuRealtimeRuntime": 0,
		"CpusetCpus": "",
		"CpusetMems": "",
		"Devices": null,
		"DeviceCgroupRules": null,
		"DeviceRequests": null,
		"KernelMemory": 0,
		"KernelMemoryTCP": 0,
		"MemoryReservation": 0,
		"MemorySwap": 0,
		"MemorySwappiness": null,
		"OomKillDisable": false,
		"PidsLimit": null,
		"Ulimits": null,
		"CpuCount": 0,
		"CpuPercent": 0,
		"IOMaximumIOps": 0,
		"IOMaximumBandwidth": 0,
		"MaskedPaths": [
			"/proc/asound",
			"/proc/acpi",
			"/proc/kcore",
			"/proc/keys",
			"/proc/latency_stats",
			"/proc/timer_list",
			"/proc/timer_stats",
			"/proc/sched_debug",
			"/proc/scsi",
			"/sys/firmware"
		],
		"ReadonlyPaths": [
			"/proc/bus",
			"/proc/fs",
			"/proc/irq",
			"/proc/sys",
			"/proc/sysrq-trigger"
		],
		"Init": false
	},
	"GraphDriver": {
		"Data": {
			"LowerDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211-init/diff:/var/lib/docker/overlay2/f3f9336a94ad2112aa11c910c07bc9a6a34aa8dad168a7d23b0c4188f54210c5/diff:/var/lib/docker/overlay2/2fe55d675fb5a5eae3a04cf0d4a35e1123640b547fc0e32626ff5d30e6a6bcbd/diff:/var/lib/docker/overlay2/09fa99180fcb31c9227097903824706cc474b6bab42879dcc874683e73208ba7/diff:/var/lib/docker/overlay2/80899acd1f5e59991e9a33cc23aebac474659eafb1ec00fe9a430649e648c0bb/diff:/var/lib/docker/overlay2/428a304b1b7a855dae0074376410b27a234aa090616131b2b675ff63e578b0c3/diff:/var/lib/docker/overlay2/7e7854aacb818d924231cf481f52501ccd9c0b6e482ea0dabee63e666a66c705/diff",
			"MergedDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/merged",
			"UpperDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/diff",
			"WorkDir": "/var/lib/docker/overlay2/b34d553dda9a9601ccba85a2051d595151d3493ae1367d12b1bea63eac28c211/work"
		},
		"Name": "overlay2"
	},
	"Mounts": [],
	"Config": {
		"Hostname": "bd731b21006f",
		"Domainname": "",
		"User": "",
		"AttachStdin": false,
		"AttachStdout": false,
		"AttachStderr": false,
		"ExposedPorts": {
			"80/tcp": {}
		},
		"Tty": false,
		"OpenStdin": false,
		"StdinOnce": false,
		"Env": [
			"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
			"NGINX_VERSION=1.21.1",
			"NJS_VERSION=0.6.1",
			"PKG_RELEASE=1~buster"
		],
		"Cmd": [
			"nginx",
			"-g",
			"daemon off;"
		],
		"Image": "sha256:4cdc5dd7eaadff5080649e8d0014f2f8d36d4ddf2eff2fdf577dd13da85c5d2f",
		"Volumes": null,
		"WorkingDir": "",
		"Entrypoint": [
			"/docker-entrypoint.sh"
		],
		"OnBuild": null,
		"Labels": {
			"maintainer": "NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e"
		},
		"StopSignal": "SIGQUIT"
	},
	"NetworkSettings": {
		"Bridge": "",
		"SandboxID": "1b6466ff49716ac77fb825e1a50c219a89216db21c492f3da69f7d2ae1b3e35d",
		"HairpinMode": false,
		"LinkLocalIPv6Address": "",
		"LinkLocalIPv6PrefixLen": 0,
		"Ports": {
			"80/tcp": [
				{
					"HostIp": "0.0.0.0",
					"HostPort": "8000"
				}
			]
		},
		"SandboxKey": "/var/run/docker/netns/1b6466ff4971",
		"SecondaryIPAddresses": null,
		"SecondaryIPv6Addresses": null,
		"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
		"Gateway": "172.17.0.1",
		"GlobalIPv6Address": "",
		"GlobalIPv6PrefixLen": 0,
		"IPAddress": "172.17.0.2",
		"IPPrefixLen": 16,
		"IPv6Gateway": "",
		"MacAddress": "xxx",
		"Networks": {
			"bridge": {
				"IPAMConfig": null,
				"Links": null,
				"Aliases": null,
				"NetworkID": "15d8333bb24924af95bc624b999e0cc8b1388951a35a7fa80bfcb0b352636db7",
				"EndpointID": "a6873f209c28757462c9d42740ce677411dc556a87d3263c64e5a8f86b0579a9",
				"Gateway": "172.17.0.1",
				"IPAddress": "172.17.0.2",
				"IPPrefixLen": 16,
				"IPv6Gateway": "",
				"GlobalIPv6Address": "",
				"GlobalIPv6PrefixLen": 0,
				"MacAddress": "xxx",
				"DriverOpts": null
			}
		}
	}
}: timestamp=2021-12-17T14:51:44.451+0100
2021-12-17T14:51:44.455+0100 [WARN]  Provider "registry.terraform.io/kreuzwerker/docker" produced an unexpected new value for docker_container.nginxContainer during refresh.
      - .group_add: was null, but now cty.SetValEmpty(cty.String)
      - .dns_search: was null, but now cty.SetValEmpty(cty.String)
      - .dns: was null, but now cty.SetValEmpty(cty.String)
      - .links: was null, but now cty.SetValEmpty(cty.String)
      - .dns_opts: was null, but now cty.SetValEmpty(cty.String)
      - .log_opts: was null, but now cty.MapValEmpty(cty.String)
      - .storage_opts: was null, but now cty.MapValEmpty(cty.String)
      - .tmpfs: was null, but now cty.MapValEmpty(cty.String)
      - .sysctls: was null, but now cty.MapValEmpty(cty.String)
2021-12-17T14:51:44.455+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to refreshState for docker_container.nginxContainer
2021-12-17T14:51:44.455+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:44.456+0100 [TRACE] Re-validating config for "docker_container.nginxContainer"
2021-12-17T14:51:44.456+0100 [TRACE] GRPCProvider: ValidateResourceConfig
2021-12-17T14:51:44.457+0100 [TRACE] GRPCProvider: PlanResourceChange
2021-12-17T14:51:44.460+0100 [WARN]  Provider "registry.terraform.io/kreuzwerker/docker" produced an invalid plan for docker_container.nginxContainer, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .rm: planned value cty.False for a non-computed attribute
      - .cpu_shares: planned value cty.NumberIntVal(0) for a non-computed attribute
      - .tty: planned value cty.False for a non-computed attribute
      - .privileged: planned value cty.False for a non-computed attribute
      - .memory: planned value cty.NumberIntVal(0) for a non-computed attribute
      - .network_mode: planned value cty.StringVal("default") for a non-computed attribute
      - .read_only: planned value cty.False for a non-computed attribute
      - .tmpfs: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .max_retry_count: planned value cty.NumberIntVal(0) for a non-computed attribute
      - .sysctls: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .pid_mode: planned value cty.StringVal("") for a non-computed attribute
      - .user: planned value cty.StringVal("") for a non-computed attribute
      - .restart: planned value cty.StringVal("no") for a non-computed attribute
      - .domainname: planned value cty.StringVal("") for a non-computed attribute
      - .publish_all_ports: planned value cty.False for a non-computed attribute
      - .start: planned value cty.True for a non-computed attribute
      - .stdin_open: planned value cty.False for a non-computed attribute
      - .group_add: planned value cty.SetValEmpty(cty.String) for a non-computed attribute
      - .memory_swap: planned value cty.NumberIntVal(0) for a non-computed attribute
      - .logs: planned value cty.False for a non-computed attribute
      - .dns_search: planned value cty.SetValEmpty(cty.String) for a non-computed attribute
      - .dns: planned value cty.SetValEmpty(cty.String) for a non-computed attribute
      - .links: planned value cty.SetValEmpty(cty.String) for a non-computed attribute
      - .remove_volumes: planned value cty.True for a non-computed attribute
      - .cpu_set: planned value cty.StringVal("") for a non-computed attribute
      - .must_run: planned value cty.True for a non-computed attribute
      - .userns_mode: planned value cty.StringVal("") for a non-computed attribute
      - .log_driver: planned value cty.StringVal("json-file") for a non-computed attribute
      - .dns_opts: planned value cty.SetValEmpty(cty.String) for a non-computed attribute
      - .log_opts: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .storage_opts: planned value cty.MapValEmpty(cty.String) for a non-computed attribute
      - .working_dir: planned value cty.StringVal("") for a non-computed attribute
      - .attach: planned value cty.False for a non-computed attribute
      - .ports[0].ip: planned value cty.StringVal("0.0.0.0") for a non-computed attribute
      - .ports[0].protocol: planned value cty.StringVal("tcp") for a non-computed attribute
2021-12-17T14:51:44.461+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState to workingState for docker_container.nginxContainer
2021-12-17T14:51:44.461+0100 [TRACE] NodeAbstractResouceInstance.writeResourceInstanceState: writing state object for docker_container.nginxContainer
2021-12-17T14:51:44.461+0100 [TRACE] writeChange: recorded NoOp change for docker_container.nginxContainer
2021-12-17T14:51:44.461+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:44.461+0100 [TRACE] vertex "docker_container.nginxContainer": dynamic subgraph completed successfully
2021-12-17T14:51:44.461+0100 [TRACE] vertex "docker_container.nginxContainer": visit complete
2021-12-17T14:51:44.462+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": dynamic subgraph completed successfully
2021-12-17T14:51:44.462+0100 [TRACE] vertex "docker_container.nginxContainer (expand)": visit complete
2021-12-17T14:51:44.462+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": starting visit (*terraform.graphNodeCloseProvider)
2021-12-17T14:51:44.462+0100 [TRACE] GRPCProvider: Close
2021-12-17T14:51:44.462+0100 [DEBUG] provider.stdio: received EOF, stopping recv loop: err="rpc error: code = Unavailable desc = transport is closing"
2021-12-17T14:51:44.464+0100 [DEBUG] provider: plugin process exited: path=.terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64/terraform-provider-docker_v2.15.0 pid=77881
2021-12-17T14:51:44.464+0100 [DEBUG] provider: plugin exited
2021-12-17T14:51:44.464+0100 [TRACE] vertex "provider[\"registry.terraform.io/kreuzwerker/docker\"] (close)": visit complete
2021-12-17T14:51:44.464+0100 [TRACE] vertex "root": starting visit (*terraform.nodeCloseModule)
2021-12-17T14:51:44.464+0100 [TRACE] vertex "root": visit complete
2021-12-17T14:51:44.464+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"
2021-12-17T14:51:44.468+0100 [INFO]  backend/local: plan operation completed
2021-12-17T14:51:44.468+0100 [INFO]  backend/local: writing plan output to: test.plan
2021-12-17T14:51:44.470+0100 [TRACE] LoadSchemas: retrieving schema for provider type "registry.terraform.io/kreuzwerker/docker"

Note: Objects have changed outside of Terraform

Terraform detected the following changes made outside of Terraform since the last "terraform apply":

  # docker_container.nginxContainer has changed
  ~ resource "docker_container" "nginxContainer" {
      + dns               = []
      + dns_opts          = []
      + dns_search        = []
      + group_add         = []
        id                = "bd731b21006fb07dd3734f142354e481e12c131c418350ed514ac93a9b67d57b"
      + links             = []
      + log_opts          = {}
        name              = "tutorial"
      + storage_opts      = {}
      + sysctls           = {}
      + tmpfs             = {}
        # (31 unchanged attributes hidden)

        # (1 unchanged block hidden)
    }


Unless you have made equivalent changes to your configuration, or ignored the relevant attributes using ignore_changes, the following plan may include actions to undo or respond to these changes.

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

No changes. Your infrastructure matches the configuration.

Your configuration already matches the changes detected above. If you'd like to update the Terraform state to match, create and apply a refresh-only plan:
  terraform apply -refresh-only
2021-12-17T14:51:44.479+0100 [TRACE] statemgr.Filesystem: removing lock metadata file .test.tfstate.lock.info
2021-12-17T14:51:44.479+0100 [TRACE] statemgr.Filesystem: unlocking test.tfstate using fcntl flock
2021-12-17T14:51:44.516+0100 [INFO]  Terraform version: 1.1.1
2021-12-17T14:51:44.516+0100 [INFO]  Go runtime version: go1.17.2
2021-12-17T14:51:44.516+0100 [INFO]  CLI args: []string{"terraform", "show", "test.plan"}
2021-12-17T14:51:44.516+0100 [TRACE] Stdout is a terminal of width 272
2021-12-17T14:51:44.516+0100 [TRACE] Stderr is a terminal of width 272
2021-12-17T14:51:44.516+0100 [TRACE] Stdin is a terminal
2021-12-17T14:51:44.516+0100 [DEBUG] Attempting to open CLI config file: /Users/ansgar/.terraformrc
2021-12-17T14:51:44.516+0100 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2021-12-17T14:51:44.517+0100 [INFO]  Loading CLI configuration from /Users/ansgar/.terraform.d/credentials.tfrc.json
2021-12-17T14:51:44.517+0100 [DEBUG] checking for credentials in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:44.517+0100 [DEBUG] ignoring non-existing provider search directory terraform.d/plugins
2021-12-17T14:51:44.517+0100 [DEBUG] will search for provider plugins in /Users/ansgar/.terraform.d/plugins
2021-12-17T14:51:44.517+0100 [WARN]  local provider path "/Users/ansgar/.terraform.d/plugins/local/hashicorp/.DS_Store" contains invalid type ".DS_Store"; ignoring
2021-12-17T14:51:44.517+0100 [WARN]  ignoring file "local/hashicorp/awscc/.DS_Store" as possible package for local/hashicorp/awscc: filename lacks expected prefix "terraform-provider-awscc_"
2021-12-17T14:51:44.518+0100 [TRACE] getproviders.SearchLocalDirectory: found local/hashicorp/awscc v0.1.0 for darwin_amd64 at /Users/ansgar/.terraform.d/plugins/local/hashicorp/awscc/0.1.0/darwin_amd64
2021-12-17T14:51:44.518+0100 [DEBUG] ignoring non-existing provider search directory /Users/ansgar/Library/Application Support/io.terraform/plugins
2021-12-17T14:51:44.518+0100 [DEBUG] ignoring non-existing provider search directory /Library/Application Support/io.terraform/plugins
2021-12-17T14:51:44.518+0100 [INFO]  CLI command args: []string{"show", "test.plan"}
2021-12-17T14:51:44.519+0100 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2021-12-17T14:51:44.519+0100 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2021-12-17T14:51:44.519+0100 [DEBUG] New state was assigned lineage "53652d5d-1075-46a9-389d-5ff5c153426c"
2021-12-17T14:51:44.519+0100 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2021-12-17T14:51:44.519+0100 [TRACE] Meta.Backend: instantiated backend of type <nil>
2021-12-17T14:51:44.519+0100 [TRACE] providercache.fillMetaCache: scanning directory .terraform/providers
2021-12-17T14:51:44.520+0100 [TRACE] getproviders.SearchLocalDirectory: found registry.terraform.io/kreuzwerker/docker v2.15.0 for darwin_amd64 at .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64
2021-12-17T14:51:44.520+0100 [TRACE] providercache.fillMetaCache: including .terraform/providers/registry.terraform.io/kreuzwerker/docker/2.15.0/darwin_amd64 as a candidate package for registry.terraform.io/kreuzwerker/docker 2.15.0
2021-12-17T14:51:44.577+0100 [DEBUG] checking for provisioner in "."
2021-12-17T14:51:44.577+0100 [DEBUG] checking for provisioner in "/usr/local/Caskroom/terraform-1.1.1/1.1.1"
2021-12-17T14:51:44.577+0100 [DEBUG] checking for provisioner in "/Users/ansgar/.terraform.d/plugins"
2021-12-17T14:51:44.577+0100 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2021-12-17T14:51:44.578+0100 [TRACE] backend/local: requesting state manager for workspace "default"
2021-12-17T14:51:44.578+0100 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2021-12-17T14:51:44.578+0100 [TRACE] backend/local: requesting state lock for workspace "default"
2021-12-17T14:51:44.578+0100 [TRACE] backend/local: reading remote state for workspace "default"
2021-12-17T14:51:44.578+0100 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2021-12-17T14:51:44.578+0100 [TRACE] statemgr.Filesystem: snapshot file has nil snapshot, but that's okay
2021-12-17T14:51:44.578+0100 [TRACE] statemgr.Filesystem: read nil snapshot
2021-12-17T14:51:44.578+0100 [TRACE] backend/local: populating backend.LocalRun from plan file
2021-12-17T14:51:44.578+0100 [TRACE] Config.VerifyDependencySelections: provider registry.terraform.io/kreuzwerker/docker has 2.15.0 to satisfy "~> 2.12"
2021-12-17T14:51:44.579+0100 [TRACE] terraform.NewContext: starting
2021-12-17T14:51:44.579+0100 [TRACE] terraform.NewContext: complete
â•·
â”‚ Error: Saved plan does not match the given state
â”‚
â”‚ The given plan file can not be applied because it was created from a different state lineage.
â•µ

âžœ  reproduction-cdktf-tf-1.1-issue git:(main)                                                                                                                                                                                                                          14:51:44